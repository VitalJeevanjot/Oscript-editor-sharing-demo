(function(t){function e(e){for(var a,o,i=e[0],l=e[1],u=e[2],c=0,m=[];c<i.length;c++)o=i[c],s[o]&&m.push(s[o][0]),s[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(t[a]=l[a]);d&&d(e);while(m.length)m.shift()();return r.push.apply(r,u||[]),n()}function n(){for(var t,e=0;e<r.length;e++){for(var n=r[e],a=!0,o=1;o<n.length;o++){var l=n[o];0!==s[l]&&(a=!1)}a&&(r.splice(e--,1),t=i(i.s=n[0]))}return t}var a={},s={app:0},r=[];function o(t){return i.p+"js/"+({}[t]||t)+"."+{"chunk-2d0a3577":"7d295029","chunk-2d0a43df":"ba763123","chunk-2d0aa90c":"1ff83f88","chunk-2d0aab07":"c7b138ee","chunk-2d0abc00":"e59fec7f","chunk-2d0ae937":"4d9b82da","chunk-2d0aeb45":"2c0f93aa","chunk-2d0afa49":"72db30bb","chunk-2d0b2762":"cc16d625","chunk-2d0b6187":"352098d3","chunk-2d0ba136":"bcbeb7fc","chunk-2d0bb267":"b5d72914","chunk-2d0bcec1":"3ee947d2","chunk-2d0bff92":"c3149f81","chunk-2d0c0494":"c4f9fca8","chunk-2d0c0a09":"6932e4f0","chunk-2d0c1ed0":"efa20cc6","chunk-2d0c4313":"d662ca8a","chunk-2d0c46d1":"1d6afcef","chunk-2d0c512b":"b51a9c09","chunk-2d0cf16e":"d61991d4","chunk-2d0d056d":"b06de0d3","chunk-2d0d0645":"c2a17485","chunk-2d0d2f22":"bacca7fa","chunk-2d0d7e63":"121a61f9","chunk-2d0e1b57":"20eb2fbd","chunk-2d0e1fbe":"0f88c86d","chunk-2d0e22d6":"bb5cbbbe","chunk-2d0e542a":"cab3ae49","chunk-2d0e57ec":"354f3523","chunk-2d0e6553":"e64d25b8","chunk-2d0e6c86":"2865faa3","chunk-2d0ea098":"21274f30","chunk-2d208ac5":"f800fa82","chunk-2d209408":"3febcba1","chunk-2d20f745":"7acb8018","chunk-2d2138c7":"807d6317","chunk-2d216f3b":"2bdffc29","chunk-2d217e5b":"bcc7b28f","chunk-2d21b84a":"5f56953f","chunk-2d21dcd2":"854caf9b","chunk-2d21f327":"c9b4277c","chunk-2d2214b3":"25970bcd","chunk-2d221814":"ceb8141b","chunk-2d221a34":"b0e5d3ce","chunk-2d22502a":"27646c39","chunk-2d228ca6":"923671b2","chunk-2d2295e9":"8370693f","chunk-2d22c171":"c2405e7d","chunk-2d22c2b8":"17c71188","chunk-2d22ca58":"4b094d49","chunk-2d2311f7":"af657a5f","chunk-2d237ee7":"4b1a8ee8","chunk-2d238465":"56e5e76a","chunk-7532b3ea":"348963f5","chunk-76fee5a0":"8396d206","chunk-774ac664":"f6f208f0"}[t]+".js"}function i(e){if(a[e])return a[e].exports;var n=a[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(t){var e=[],n=s[t];if(0!==n)if(n)e.push(n[2]);else{var a=new Promise(function(e,a){n=s[t]=[e,a]});e.push(n[2]=a);var r,l=document.createElement("script");l.charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.src=o(t),r=function(e){l.onerror=l.onload=null,clearTimeout(u);var n=s[t];if(0!==n){if(n){var a=e&&("load"===e.type?"missing":e.type),r=e&&e.target&&e.target.src,o=new Error("Loading chunk "+t+" failed.\n("+a+": "+r+")");o.type=a,o.request=r,n[1](o)}s[t]=void 0}};var u=setTimeout(function(){r({type:"timeout",target:l})},12e4);l.onerror=l.onload=r,document.head.appendChild(l)}return Promise.all(e)},i.m=t,i.c=a,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/",i.oe=function(t){throw console.error(t),t};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],u=l.push.bind(l);l.push=e,l=l.slice();for(var c=0;c<l.length;c++)e(l[c]);var d=u;r.push([0,"chunk-vendors"]),n()})({0:function(t,e,n){t.exports=n("56d7")},"0081":function(t,e,n){"use strict";var a=n("e54b");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("c2c6")),r=[{quoted:!0,label:"data",insertText:"data",kind:s.languages.CompletionItemKind.Enum,detail:"`data` app type",documentation:{value:"\n`data`: used to send data, this includes sending data parameters to other (secondary) AAs;\n"}},{quoted:!0,label:"payment",insertText:"payment",kind:s.languages.CompletionItemKind.Enum,detail:"`payment` app type",documentation:{value:"\n`payment`: is used to send payments in any asset back to sender or to a third party.\n"}},{quoted:!0,label:"data_feed",insertText:"data_feed",kind:s.languages.CompletionItemKind.Enum,detail:"`data_feed` app type",documentation:{value:"\n`data_feed`: used to send data feeds.  By doing this, the AA becomes an oracle;\n"}},{quoted:!0,label:"profile",insertText:"profile",kind:s.languages.CompletionItemKind.Enum,detail:"`profile` app type",documentation:{value:"\n`profile`: used to send one's own profile.  Maybe an AA wants to say something to the world about itself;\n"}},{quoted:!0,label:"text",insertText:"text",kind:s.languages.CompletionItemKind.Enum,detail:"`text` app type",documentation:{value:"\n`text`: used to save arbitrary text to the DAG;\n"}},{quoted:!0,label:"definition",insertText:"definition",kind:s.languages.CompletionItemKind.Enum,detail:"`definition` app type",documentation:{value:"\n`definition`: used to post a definition of a new AA;\n"}},{quoted:!0,label:"asset_attestors",insertText:"asset_attestors",kind:s.languages.CompletionItemKind.Enum,detail:"`asset_attestors` app type",documentation:{value:"\n`asset_attestors`: used to change the attestor list of an asset previously defined by this AA;\n"}},{quoted:!0,label:"attestation",insertText:"attestation",kind:s.languages.CompletionItemKind.Enum,detail:"`attestation` app type",documentation:{value:"\n`attestation`: used to post information about some other address.  By doing this, the AA becomes an attestor;\n"}},{quoted:!0,label:"definition_template",insertText:"definition_template",kind:s.languages.CompletionItemKind.Enum,detail:"`definition_template` app type",documentation:{value:"\n`definition_template`: used to post a template for smart contract definition;\n"}},{quoted:!0,label:"poll",insertText:"poll",kind:s.languages.CompletionItemKind.Enum,detail:"`poll` app type",documentation:{value:"\n`poll`: used to create a poll;\n"}},{quoted:!0,label:"vote",insertText:"vote",kind:s.languages.CompletionItemKind.Enum,detail:"`vote` app type",documentation:{value:"\n`vote`: used to vote in a poll.  Every AA has voting rights after all.\n"}},{quoted:!1,label:"base",insertText:"base",kind:s.languages.CompletionItemKind.Enum,detail:"`base` asset",documentation:{value:"\n`asset` can be `base` for bytes, asset id for any other asset, or any expression that evaluates to an asset id or `base` string.\n"}},{quoted:!1,label:"true",insertText:"true",kind:s.languages.CompletionItemKind.Keyword,detail:"true",documentation:{value:"\n"}},{quoted:!1,label:"false",insertText:"false",kind:s.languages.CompletionItemKind.Keyword,detail:"false",documentation:{value:"\n"}},{quoted:!1,label:"state",insertText:"state",kind:s.languages.CompletionItemKind.Enum,detail:"`state` app type",documentation:{value:"\nA state message is a special message in the `messages` array that performs state changes.  It is the only oscript where state variables are assigned.  Unlike regular messages that always have `payload`, state message has a field named `state` instead that contains a state changing script:\n\n\t{\n\t\tmessages: [\n\t\t\t{\n\t\t\t\tapp: 'payment',\n\t\t\t\tpayload: {\n\t\t\t\t\tasset: 'base',\n\t\t\t\t\toutputs: [\n\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=base]] - 1000}\"}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tapp: 'state',\n\t\t\t\tstate: `{\n\t\t\t\t\tvar['responded'] = 1;\n\t\t\t\t\tvar['total_balance_sent_back'] += trigger.output[[asset=base]] - 1000;\n\t\t\t\t\tvar[trigger.address || '_response_unit'] = response_unit;\n\t\t\t\t}`\n\t\t\t}\n\t\t]\n\t}\n\nThe state message must always be the last message in the `messages` array.  It is not included in the final response unit and its script (state script) is evaluated **after** the response unit is already prepared.  It is the only oscript where response_unit variable is available. State script contains only statements, it is not allowed to return any value.\n"}}];e.default=r},"036b":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\t/*\n\tThis is an ICO agent with milestone-based release of the raised funds.\n\n\tThe funds are released only after a trusted third party (an auditor) verifies the team's performance and approves the release of the next milestone payment.  The auditor can be a multisig address.\n\n\tIf the ICO doesn't reach its target, the investors can get a refund by exchanging their tokens back to bytes.\n\t*/\n\tinit: `{\n\t\t$control_address = 'VF5UVKDSOXPMITMDGYXEIGUJSQBRAMMN'; // controled by the fundraiser, used to finish the ICO\n\t\t$fundraiser_address = 'VF5UVKDSOXPMITMDGYXEIGUJSQBRAMMN'; // this address receives the milestone payments\n\t\t$auditor_address = 'JE3HACDALPUAQ6SJOFM74W43EGVFWEIF';\n\t\t$price = 13.3; // bytes per token\n\t\t$target = 100e9; // if raised less, will refund\n\t\t$expiry_ts = 1577836000; // Jan 1, 2020\n\t\t$milestone1 = 10; // in %\n\t\t$milestone2 = 30;\n\t\t$milestone3 = 40;\n\t\t$milestone4 = 20;\n\t\t$asset = var['asset'];\n\t\t$finished = var['finished'];\n\t\t$is_active = ($asset AND $price AND !$finished);\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // create a token\n\t\t\t\tif: `{trigger.data.define AND !$asset}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['asset'] = response_unit;\n\t\t\t\t\t\t\tresponse['asset'] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // contribute\n\t\t\t\tif: `{ trigger.output[[asset=base]] >= 1e5 AND $is_active }`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$amount = round(trigger.output[[asset=base]] / $price);\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{$asset}\",\n\t\t\t\t\t\t\toutputs: [{address: \"{trigger.address}\", amount: \"{$amount}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // finish the ICO\n\t\t\t\tif: `{ trigger.data.finish AND (trigger.address == $control_address OR timestamp > $expiry_ts) }`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['finished'] = 1;\n\t\t\t\t\t\t\tvar['total'] = balance[base];\n\t\t\t\t\t\t\tresponse['total'] = balance[base];\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // release a milestone\n\t\t\t\tif: `{trigger.data.milestone AND trigger.address == $auditor_address AND $finished AND var['total'] >= $target}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$share = ${'milestone' || trigger.data.milestone} / 100;\n\t\t\t\t\tif (!$share)\n\t\t\t\t\t\tbounce('no such milestone');\n\t\t\t\t\tif (var['milestone' || trigger.data.milestone || '_released'])\n\t\t\t\t\t\tbounce('milestone ' || trigger.data.milestone || ' already released');\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [{address: \"{$fundraiser_address}\", amount: \"{round(var['total'] * $share)}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['milestone' || trigger.data.milestone || '_released'] = 1;\n\t\t\t\t\t\t\tresponse['released'] = 1;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // refund\n\t\t\t\tif: `{$asset AND trigger.output[[asset=$asset]] > 0 AND $finished AND var['total'] < $target}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [{address: \"{trigger.address}\", amount: \"{ round(trigger.output[[asset=$asset]] * $price) }\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},"089d":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("d225")),r=a(n("308d")),o=a(n("6bb5")),i=a(n("013f")),l=a(n("4e2b")),u=a(n("f28b")),c=function(t){function e(t){var n;return(0,s.default)(this,e),n=(0,r.default)(this,(0,o.default)(e).call(this,t)),Error.captureStackTrace((0,i.default)(n),n.constructor),n}return(0,l.default)(e,t),e}((0,u.default)(Error));e.default=c},"0a5b":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("d225")),r=a(n("308d")),o=a(n("6bb5")),i=a(n("013f")),l=a(n("4e2b")),u=a(n("f28b")),c=function(t){function e(t){var n;return(0,s.default)(this,e),n=(0,r.default)(this,(0,o.default)(e).call(this,t)),Error.captureStackTrace((0,i.default)(n),n.constructor),n}return(0,l.default)(e,t),e}((0,u.default)(Error));e.default=c},1:function(t,e){},1881:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("4199")),r=a(n("cdb1")),o=a(n("2345")),i={oscript:s.default,ojson:r.default,resultHighlighter:o.default};e.default=i},"1bda":function(t,e,n){"use strict";var a=n("e54b");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("c2c6")),r=[{quoted:!0,label:"autonomous agent",insertText:"autonomous agent",kind:s.languages.CompletionItemKind.Keyword,detail:"Autonomous agents definition",documentation:{value:'\nAutonomous agent definition\n\nAddresses of autonomous agents follow the same general rules as all other Obyte addresses: their definitions are two-element arrays and the address is a checksummed hash of the array encoded in base32.\n\nAA address is defined as:\n\n\t["autonomous agent", {\n\t\t// here goes the AA code\n\t}]\n\nThe second element of the above array is an object that defines a template for future units created by the AA.  The template\'s structure follows the structure of a regular unit in general, with some elements dynamic and dependent upon the input and state parameters.  The dynamic elements are designated with special markup and include code in a domain specific language called Oscript:\n\n\t{address: "{trigger.address}", amount: "{trigger.output[[asset=base]] - 1000}"}\n'}},{quoted:!1,label:"bounce_fees",insertText:"bounce_fees: ",kind:s.languages.CompletionItemKind.Field,detail:"`bounce_fees` field",documentation:{value:"\nThis is an optional field of the unit template that specifies the fees charged from sender if the AA execution fails.  In this case, all the received money in all assets is automatically bounced back to sender, less the bounce fees.  The fees are keyed by asset ID ('base' for bytes).\n\nThe minimum and default bounce fee for bytes is 10000 bytes.  The minimum and default bounce fee for all other assets is 0.  Non-base bounce fees apply only to those assets that were actually received by the autonomous agent.\n\nSending to an autonomous agent anything less than the bounce fees will result in no response and the AA silently eating the coins.  However this rule applies only to money sent from regular addresses.  Bounce fees are not checked when the money is received from another AA.\n\n'bounce_fees' field is removed from the final unit.\n\n\t{\n\t\tbounce_fees: { base: 10000, \"n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY=\": 100 },\n\t\t...\n\t}\n"}},{quoted:!1,label:"messages",insertText:"messages: ",kind:s.languages.CompletionItemKind.Field,detail:"`messages` field",documentation:{value:"\nThis is the main field of autonomous agent definition.  It specifies templates for the messages to be generated, and the templates are parameterized with oscript code.\n\nThe messages can be of any type (called `app`) that Obyte supports.  The most common app is `payment`, it is used to send payments in any asset back to sender or to a third party.  Other apps are:\n* `asset`: used to define a new asset;\n* `data`: used to send data, this includes sending data parameters to other (secondary) AAs;\n* `data_feed`: used to send data feeds.  By doing this, the AA becomes an oracle;\n* `profile`: used to send one's own profile.  Maybe an AA wants to say something to the world about itself;\n* `text`: used to save arbitrary text to the DAG;\n* `definition`: used to post a definition of a new AA;\n* `asset_attestors`: used to change the attestor list of an asset previously defined by this AA;\n* `attestation`: used to post information about some other address.  By doing this, the AA becomes an attestor;\n* `definition_template`: used to post a template for smart contract definition;\n* `poll`: used to create a poll;\n* `vote`: used to vote in a poll.  Every AA has voting rights after all.\n\nThere is also another, special, app called `state`, which is not possible in regular units but is used only in AAs to produce state changes.  More about it in a [separate chapter]().\n"}},{quoted:!1,label:"app",insertText:"app: ",kind:s.languages.CompletionItemKind.Field,documentation:{value:"\nIn Obyte, any transaction can contain one or more _messages_ of different types. These types are called _apps_.  The most common app is `payment`.  At least one payment is mandatory in every transaction, it is necessary to at least pay fees.  Another app is `data`.\n"},detail:"`app` field"},{quoted:!1,label:"payload",insertText:"payload: ",kind:s.languages.CompletionItemKind.Field,detail:"`payload` field",documentation:{value:"\nThe object in `payload` is the data this message delivers.\n"}},{quoted:!1,label:"outputs",insertText:"outputs: ",kind:s.languages.CompletionItemKind.Field,detail:"`outputs` field",documentation:{value:"\nOutputs of the response transaction\n"}},{quoted:!1,label:"address",insertText:"address: ",kind:s.languages.CompletionItemKind.Field,detail:"`address` field",documentation:{value:"\nOutput address\n"}},{quoted:!1,label:"amount",insertText:"amount: ",kind:s.languages.CompletionItemKind.Field,detail:"`amount` field",documentation:{value:"\nOutput amount\n"}},{quoted:!1,label:"cases",insertText:"cases: ",kind:s.languages.CompletionItemKind.Field,detail:"`cases` field",documentation:{value:"\nThe regular value of an object/array is replaced with an object whose single element is an array `cases`.  Each element of the `cases` array is an object with up to 3 elements:\n* `if`: an Oscript expression.  If the result of its evaluation is truthy then this `case` is selected.  All other `case`s are not evaluated.  `if` is required for all `case`s except the last, the last one may or may not have an `if`.  If all previous `case`s evaluated to a falsy value and the last one is without an `if`, the last one is selected;\n* `init`: an optional statements-only Oscript that is evaluated immediately after `if` if this `case` is selected;\n* a mandatory element that is named the same as the original field (`messages` in the above example).  If this `case` is selected, the original (3 levels higher) field is replaced with the value of this element.\nCases can be nested.\n\nCases can be used for any non-scalar value inside `messages`, not just `messages` themselves.\n"}},{quoted:!1,label:"if",insertText:"if: ",kind:s.languages.CompletionItemKind.Field,detail:"`if` field",documentation:{value:"\nAny object can have an additional `if` field.  It is evaluated first, and if it is falsy, the entire object is removed from the enclosing object or array.  Its internal Oscripts are not evaluated in this case.\nThe `if` field itself is removed from the object.\n"}},{quoted:!1,label:"init",insertText:"init: ",kind:s.languages.CompletionItemKind.Field,detail:"`init` field",documentation:{value:'\nAny object can have an additional `init` field.  It is evaluated immediately after `if` if `if` is present and truthy.  If there is no `if`, `init` is unconditionally evaluated first.\n\n\t{\n\t\tmessages: [\n\t\t\t{\n\t\t\t\tinit: `{ $addr = trigger.address; }`,\n\t\t\t\tapp: \'data\',\n\t\t\t\tpayload: {\n\t\t\t\t\ttimestamp: `{timestamp}`,\n\t\t\t\t\tsubscriber: `{$addr}`\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tif: `{trigger.data.withdrawal_amount > 1000}`,\n\t\t\t\tinit: `{ $amount = trigger.data.withdrawal_amount - 1000; }`,\n\t\t\t\tapp: \'payment\',\n\t\t\t\tpayload: {\n\t\t\t\t\tasset: "base",\n\t\t\t\t\toutputs: [\n\t\t\t\t\t\t{address: "{trigger.address}", amount: "{$amount}"}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n`init` must be a statements-only Oscript, it does not return a value.\nThe `init` field itself is removed from the object.\n'}},{quoted:!1,label:"state",insertText:"state ",kind:s.languages.CompletionItemKind.Field,detail:"`state` field",documentation:{value:"\nA state message is a special message in the `messages` array that performs state changes.  It is the only oscript where [state variables](#State variables) are assigned.  Unlike regular messages that always have `payload`, state message has a field named `state` instead that contains a state changing script:\n\n\t{\n\t\tmessages: [\n\t\t\t{\n\t\t\t\tapp: 'payment',\n\t\t\t\tpayload: {\n\t\t\t\t\tasset: 'base',\n\t\t\t\t\toutputs: [\n\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=base]] - 1000}\"}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tapp: 'state',\n\t\t\t\tstate: `{\n\t\t\t\t\tvar['responded'] = 1;\n\t\t\t\t\tvar['total_balance_sent_back'] += trigger.output[[asset=base]] - 1000;\n\t\t\t\t\tvar[trigger.address || '_response_unit'] = response_unit;\n\t\t\t\t}`\n\t\t\t}\n\t\t]\n\t}\n\nThe state message must always be the last message in the `messages` array.  It is not included in the final response unit and its script (state script) is evaluated **after** the response unit is already prepared.  It is the only oscript where [response_unit](#response_unit) variable is available. State script contains only statements, it is not allowed to return any value.\n"}},{quoted:!1,label:"base",insertText:"base: ",kind:s.languages.CompletionItemKind.Field,detail:"`base` field",documentation:{value:"\n"}},{quoted:!1,label:"is_transferrable",insertText:"is_transferrable: ",kind:s.languages.CompletionItemKind.Field,detail:"`is_transferrable` field",documentation:{value:"\n`is_transferrable`: boolean, is the asset transferrable?\n"}},{quoted:!1,label:"cap",insertText:"cap: ",kind:s.languages.CompletionItemKind.Field,detail:"`cap` field",documentation:{value:"\n`cap`: number, total supply of the asset.  For uncapped assets, 0 is returned;\n"}},{quoted:!1,label:"is_private",insertText:"is_private: ",kind:s.languages.CompletionItemKind.Field,detail:"`is_private` field",documentation:{value:"\n`is_private`: boolean, is the asset private?\n"}},{quoted:!1,label:"auto_destroy",insertText:"auto_destroy: ",kind:s.languages.CompletionItemKind.Field,detail:"`auto_destroy` field",documentation:{value:"\n`auto_destroy`: boolean, does the asset gets autodestroyed when sent to definer address?\n"}},{quoted:!1,label:"fixed_denominations",insertText:"fixed_denominations: ",kind:s.languages.CompletionItemKind.Field,detail:"`fixed_denominations` field",documentation:{value:"\n`fixed_denominations`: boolean,is the asset issued in fixed denominations?\n"}},{quoted:!1,label:"issued_by_definer_only",insertText:"issued_by_definer_only: ",kind:s.languages.CompletionItemKind.Field,detail:"`issued_by_definer_only` field",documentation:{value:"\n`issued_by_definer_only`: boolean, is the asset issued by definer only?\n"}},{quoted:!1,label:"cosigned_by_definer",insertText:"cosigned_by_definer: ",kind:s.languages.CompletionItemKind.Field,detail:"`cosigned_by_definer` field",documentation:{value:"\n`cosigned_by_definer`: boolean, should each transfer be cosigned by definer?\n"}},{quoted:!1,label:"spender_attested",insertText:"spender_attested: ",kind:s.languages.CompletionItemKind.Field,detail:"`spender_attested` field",documentation:{value:"\n`spender_attested`: boolean, should each holder be attested?\n"}},{quoted:!1,label:"is_issued",insertText:"is_issued: ",kind:s.languages.CompletionItemKind.Field,detail:"`is_issued` field",documentation:{value:"\n`is_issued`: boolean, is any amount of the asset already issued?\n"}}];e.default=r},"1cb5":function(t,e,n){var a={"./package.json":"cecb"};function s(t){var e=r(t);return n(e)}function r(t){var e=a[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}s.keys=function(){return Object.keys(a)},s.resolve=r,t.exports=s,s.id="1cb5"},"1d0e":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tinit: `{\n\t\t$close_timeout = 300;\n\t\t$addressA = '2QHG44PZLJWD2H7C5ZIWH4NZZVB6QCC7';\n\t\t$addressB = 'X55IWSNMHNDUIYKICDW3EOYAWHRUKANP';\n\t\t$bFromA = (trigger.address == $addressA);\n\t\t$bFromB = (trigger.address == $addressB);\n\t\t$bFromParties = ($bFromA OR $bFromB);\n\t\tif ($bFromParties)\n\t\t\t$party = $bFromA ? 'A' : 'B';\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // refill the AA\n\t\t\t\tif: `{ $bFromParties AND trigger.output[[asset=base]] >= 1e5 }`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tif (var['close_initiated_by'])\n\t\t\t\t\t\t\t\tbounce('already closing');\n\t\t\t\t\t\t\tif (!var['period'])\n\t\t\t\t\t\t\t\tvar['period'] = 1;\n\t\t\t\t\t\t\t$key = 'balance' || $party;\n\t\t\t\t\t\t\tvar[$key] += trigger.output[[asset=base]];\n\t\t\t\t\t\t\tresponse[$key] = var[$key];\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // start closing\n\t\t\t\tif: `{ $bFromParties AND trigger.data.close AND !var['close_initiated_by'] }`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\t$transferredFromMe = trigger.data.transferredFromMe otherwise 0;\n\t\t\t\t\t\t\tif ($transferredFromMe < 0)\n\t\t\t\t\t\t\t\tbounce('bad amount spent by me: ' || $transferredFromMe);\n\t\t\t\t\t\t\tif (trigger.data.sentByPeer){\n\t\t\t\t\t\t\t\tif (trigger.data.sentByPeer.signed_message.channel != this_address)\n\t\t\t\t\t\t\t\t\tbounce('signed for another channel');\n\t\t\t\t\t\t\t\tif (trigger.data.sentByPeer.signed_message.period != var['period'])\n\t\t\t\t\t\t\t\t\tbounce('signed for a different period of this channel');\n\t\t\t\t\t\t\t\tif (!is_valid_signed_package(trigger.data.sentByPeer, $bFromB ? $addressA : $addressB))\n\t\t\t\t\t\t\t\t\tbounce('invalid signature by peer');\n\t\t\t\t\t\t\t\t$transferredFromPeer = trigger.data.sentByPeer.signed_message.amount_spent;\n\t\t\t\t\t\t\t\tif ($transferredFromPeer < 0)\n\t\t\t\t\t\t\t\t\tbounce('bad amount spent by peer: ' || $transferredFromPeer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$transferredFromPeer = 0;\n\t\t\t\t\t\t\tvar['spentByA'] = $bFromA ? $transferredFromMe : $transferredFromPeer;\n\t\t\t\t\t\t\tvar['spentByB'] = $bFromB ? $transferredFromMe : $transferredFromPeer;\n\t\t\t\t\t\t\t$finalBalanceA = var['balanceA'] - var['spentByA'] + var['spentByB'];\n\t\t\t\t\t\t\t$finalBalanceB = var['balanceB'] - var['spentByB'] + var['spentByA'];\n\t\t\t\t\t\t\tif ($finalBalanceA < 0 OR $finalBalanceB < 0)\n\t\t\t\t\t\t\t\tbounce('one of the balances would become negative');\n\t\t\t\t\t\t\tvar['close_initiated_by'] = $party;\n\t\t\t\t\t\t\tvar['close_start_ts'] = timestamp;\n\t\t\t\t\t\t\tresponse['close_start_ts'] = timestamp;\n\t\t\t\t\t\t\tresponse['finalBalanceA'] = $finalBalanceA;\n\t\t\t\t\t\t\tresponse['finalBalanceB'] = $finalBalanceB;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // confirm closure\n\t\t\t\tif: `{ trigger.data.confirm AND var['close_initiated_by'] }`,\n\t\t\t\tinit: `{\n\t\t\t\t\tif (!($bFromParties AND var['close_initiated_by'] != $party OR timestamp > var['close_start_ts'] + $close_timeout))\n\t\t\t\t\t\tbounce('too early');\n\t\t\t\t\t$finalBalanceA = var['balanceA'] - var['spentByA'] + var['spentByB'];\n\t\t\t\t\t$finalBalanceB = var['balanceB'] - var['spentByB'] + var['spentByA'];\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: 'base',\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t// fees are paid by the larger party, its output is send-all\n\t\t\t\t\t\t\t\t// this party also collects the accumulated 10Kb bounce fees\n\t\t\t\t\t\t\t\t{ address: '{$addressA}', amount: \"{ $finalBalanceA < $finalBalanceB ? $finalBalanceA : '' }\" },\n\t\t\t\t\t\t\t\t{ address: '{$addressB}', amount: \"{ $finalBalanceA >= $finalBalanceB ? $finalBalanceB : '' }\" }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['period'] += 1;\n\t\t\t\t\t\t\tvar['close_initiated_by'] = false;\n\t\t\t\t\t\t\tvar['close_start_ts'] = false;\n\t\t\t\t\t\t\tvar['balanceA'] = false;\n\t\t\t\t\t\t\tvar['balanceB'] = false;\n\t\t\t\t\t\t\tvar['spentByA'] = false;\n\t\t\t\t\t\t\tvar['spentByB'] = false;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // fraud proof\n\t\t\t\tif: `{ trigger.data.fraud_proof AND var['close_initiated_by'] AND trigger.data.sentByPeer }`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$bInitiatedByA = (var['close_initiated_by'] == 'A');\n\t\t\t\t\tif (trigger.data.sentByPeer.signed_message.channel != this_address)\n\t\t\t\t\t\tbounce('signed for another channel');\n\t\t\t\t\tif (trigger.data.sentByPeer.signed_message.period != var['period'])\n\t\t\t\t\t\tbounce('signed for a different period of this channel');\n\t\t\t\t\tif (!is_valid_signed_package(trigger.data.sentByPeer, $bInitiatedByA ? $addressA : $addressB))\n\t\t\t\t\t\tbounce('invalid signature by peer');\n\t\t\t\t\t$transferredFromPeer = trigger.data.sentByPeer.signed_message.amount_spent;\n\t\t\t\t\tif ($transferredFromPeer < 0)\n\t\t\t\t\t\tbounce('bad amount spent by peer: ' || $transferredFromPeer);\n\t\t\t\t\t$transferredFromPeerAsClaimedByPeer = var['spentBy' || ($bInitiatedByA ? 'A' : 'B')];\n\t\t\t\t\tif ($transferredFromPeer <= $transferredFromPeerAsClaimedByPeer)\n\t\t\t\t\t\tbounce(\"the peer didn't lie in his favor\");\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: 'base',\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t// send all\n\t\t\t\t\t\t\t\t{ address: '{trigger.address}' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['period'] += 1;\n\t\t\t\t\t\t\tvar['close_initiated_by'] = false;\n\t\t\t\t\t\t\tvar['close_start_ts'] = false;\n\t\t\t\t\t\t\tvar['balanceA'] = false;\n\t\t\t\t\t\t\tvar['balanceB'] = false;\n\t\t\t\t\t\t\tvar['spentByA'] = false;\n\t\t\t\t\t\t\tvar['spentByB'] = false;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}";e.default=a},"1ec0":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.AGENT_TYPE=e.UPDATE_USER_AGENT_TEXT=e.DELETE_USER_AGENT=e.RENAME_USER_AGENT=e.SHARE_USER_AGENT=e.CREATE_USER_AGENT=e.CHANGE_SELECTED=void 0,n("8e6e"),n("4917"),n("96cf");var s=a(n("3b8d"));n("20d6"),n("28a5");var r=a(n("bd86"));n("7514"),n("f559"),n("ac6a"),n("456d");var o=a(n("cc98")),i=a(n("4d1a")),l=a(n("bc3a")),u=a(n("41cb"));function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,a)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(n,!0).forEach(function(e){(0,r.default)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(n).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}var m=Object.keys(i.default).map(function(t,e){return{id:"template_"+e,text:i.default[t],label:t}}),p="agents/selected/change";e.CHANGE_SELECTED=p;var f="agents/userAgent/create";e.CREATE_USER_AGENT=f;var b="agents/userAgent/share";e.SHARE_USER_AGENT=b;var g="agents/userAgent/rename";e.RENAME_USER_AGENT=g;var h="agents/userAgent/delete";e.DELETE_USER_AGENT=h;var $="agents/userAgent/update/text";e.UPDATE_USER_AGENT_TEXT=$;var y={TEMPLATE:"template",USER:"user"};e.AGENT_TYPE=y;var v=function(){var t;return{namespaced:!0,state:{templates:m,userAgents:[],selected:"template_0"},getters:{selectedAgent:function(t){if(t.selected.startsWith("template")){var e=t.templates.find(function(e){return e.id===t.selected});return d({},e,{type:y.TEMPLATE})}var n=t.userAgents.find(function(e){return e.id===t.selected});return d({},n,{type:y.USER})},isSelectedAgentUser:function(t,e){var n=e.selectedAgent;return n.type===y.USER},isSelectedAgentTemplate:function(t,e){var n=e.selectedAgent;return n.type===y.TEMPLATE}},mutations:(t={},(0,r.default)(t,p,function(t,e){t.selected=e}),(0,r.default)(t,$,function(t,e){var n=e.userAgentId,a=e.text;t.userAgents.find(function(t){return t.id===n}).text=a}),(0,r.default)(t,f,function(t,e){var n=e.id,a=e.text,s=e.label;t.userAgents.unshift({id:n,label:s,text:a})}),(0,r.default)(t,b,function(t,e){var n=t.userAgents.find(function(t){return t.id===e});(0,l.default)({url:"https://api.myjson.com/bins",method:"POST",data:{id:n}}).then(function(t){var e=t.data.uri.split("/bins/").pop();u.default.push({path:"/s/"+e})})}),(0,r.default)(t,h,function(t,e){var n=t.userAgents.findIndex(function(t){return t.id===e});-1!==n&&t.userAgents.splice(n,1)}),(0,r.default)(t,g,function(t,e){var n=e.id,a=e.newLabel,s=t.userAgents.find(function(t){return t.id===n});s&&(s.label=a)}),t),actions:{changeSelected:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:a=e.commit,a(p,n);case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),createNewAgent:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s,r,i,l;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.commit,s=e.state,r=e.dispatch,i=(0,o.default)("userAgent-"),t.next=4,r("getIncrementedLabel",n);case 4:return l=t.sent,t.next=7,a(f,{id:i,label:l,text:s.templates[0].text});case 7:return t.next=9,a(p,i);case 9:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),shareThisAgent:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.commit,t.next=3,a(b,n);case 3:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),createNewAgentShared:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.commit,s=(0,o.default)("userAgent-"),t.next=4,a(f,{id:s,label:n.data.id.label,text:n.data.id.text});case 4:return t.next=6,a(p,s);case 6:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),deleteAgent:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s,r;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.commit,s=e.state,t.next=3,a(h,n);case 3:return r=s.userAgents.length?s.userAgents[0].id:s.templates[0].id,t.next=6,a(p,r);case 6:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),renameAgent:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s,r;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.commit,e.state,s=n.id,r=n.newLabel,t.abrupt("return",a(g,{id:s,newLabel:r}));case 3:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),updateText:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s,r,i,l,u;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:if(a=e.commit,s=e.getters,r=e.dispatch,i=s.selectedAgent,!s.isSelectedAgentUser){t.next=6;break}a($,{userAgentId:i.id,text:n}),t.next=15;break;case 6:if(!s.isSelectedAgentTemplate){t.next=15;break}return l=(0,o.default)("userAgent-"),t.next=10,r("getIncrementedLabel",i.label+" copy");case 10:return u=t.sent,t.next=13,a(f,{id:l,label:u,text:n});case 13:return t.next=15,a(p,l);case 15:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),getIncrementedLabel:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.state,s=a.userAgents.filter(function(t){return t.label.startsWith(n)}).reduce(function(t,e){var n=e.label.match(/\d+$/);return n?Math.max(n[0],t):t},0),t.abrupt("return","".concat(n," ").concat(s+1));case 3:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}()}}};e.default=v},2:function(t,e){},2345:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a={id:"result-highlighter",tokensProvider:{tokenizer:{root:[[/^Success.*/,{token:"comment",next:"@success"}],[/^.*/,{token:"string",next:"@string"}]],success:[[/.*/,"comment"]],string:[[/.*/,"string"]]}}};e.default=a},"25ea":function(t,e,n){"use strict";n.r(e);var a=n("5eca"),s=n.n(a);for(var r in a)"default"!==r&&function(t){n.d(e,t,function(){return a[t]})}(r);e["default"]=s.a},"2a74":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"ui",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(e,"agents",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(e,"backend",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(e,"grammars",{enumerable:!0,get:function(){return i.default}});var s=a(n("4606")),r=a(n("1ec0")),o=a(n("d207")),i=a(n("790f"))},"2af9":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"AgentControls",{enumerable:!0,get:function(){return s.default}});var s=a(n("e772"))},"2c35":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // withdraw funds\n\t\t\t\tif: `{\n\t\t\t\t\t$key = 'balance_'||trigger.address||'_'||trigger.data.asset;\n\t\t\t\t\ttrigger.data.withdraw AND trigger.data.asset AND trigger.data.amount AND trigger.data.amount <= var[$key]\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{trigger.data.asset}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.data.amount}\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar[$key] = var[$key] - trigger.data.amount;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // execute orders, order1 must be smaller or the same as order2; order2 is partially filled\n\t\t\t\tif: `{\n\t\t\t\t\t$order1 = trigger.data.order1.signed_message;\n\t\t\t\t\t$order2 = trigger.data.order2.signed_message;\n\t\t\t\t\tif (!$order1.sell_asset OR !$order2.sell_asset)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif ($order1.sell_asset != $order2.buy_asset OR $order1.buy_asset != $order2.sell_asset)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t// to do check expiry\n\n\t\t\t\t\t$sell_key1 = 'balance_' || $order1.address || '_' || $order1.sell_asset;\n\t\t\t\t\t$sell_key2 = 'balance_' || $order2.address || '_' || $order2.sell_asset;\n\n\t\t\t\t\t$id1 = sha256($order1.address || $order1.sell_asset || $order1.buy_asset || $order1.sell_amount || $order1.price || trigger.data.order1.last_ball_unit);\n\t\t\t\t\t$id2 = sha256($order2.address || $order2.sell_asset || $order2.buy_asset || $order2.sell_amount || $order2.price || trigger.data.order2.last_ball_unit);\n\n\t\t\t\t\tif (var['executed_' || $id1] OR var['executed_' || $id2])\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tif (!is_valid_signed_package(trigger.data.order1, $order1.address)\n\t\t\t\t\t\tOR !is_valid_signed_package(trigger.data.order2, $order2.address))\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t$amount_left1 = var['amount_left_' || $id1] otherwise $order1.sell_amount;\n\t\t\t\t\t$amount_left2 = var['amount_left_' || $id2] otherwise $order2.sell_amount;\n\n\t\t\t\t\tif ($amount_left1 > var[$sell_key1] OR $amount_left2 > var[$sell_key2])\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t$buy_amount1 = round($amount_left1 * $order1.price);\n\t\t\t\t\tif ($buy_amount1 > $amount_left2) // order1 is not the smaller one\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t$expected_buy_amount2 = round($buy_amount1 * $order2.price);\n\t\t\t\t\tif ($expected_buy_amount2 > $amount_left1) // user2 doesn't like the price, he gets less than expects\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\ttrue\n\t\t\t\t}`,\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: `{\n\t\t\t\t\t\t$buy_key1 = 'balance_' || $order1.address || '_' || $order1.buy_asset;\n\t\t\t\t\t\t$buy_key2 = 'balance_' || $order2.address || '_' || $order2.buy_asset;\n\t\t\t\t\t\t$base_key1 = 'balance_' || $order1.address || '_base';\n\t\t\t\t\t\t$base_key2 = 'balance_' || $order2.address || '_base';\n\n\t\t\t\t\t\tvar[$sell_key1] = var[$sell_key1] - $amount_left1;\n\t\t\t\t\t\tvar[$sell_key2] = var[$sell_key2] - $buy_amount1;\n\t\t\t\t\t\tvar[$buy_key1] = var[$buy_key1] + $buy_amount1;\n\t\t\t\t\t\tvar[$buy_key2] = var[$buy_key2] + $amount_left1;\n\n\t\t\t\t\t\t$fee = 1000;\n\t\t\t\t\t\tvar[$base_key1] = var[$base_key1] - $fee;\n\t\t\t\t\t\tvar[$base_key2] = var[$base_key2] - $fee;\n\t\t\t\t\t\tif (var[$base_key1] < 0 OR var[$base_key2] < 0)\n\t\t\t\t\t\t\tbounce('not enough balance for fees');\n\n\t\t\t\t\t\tvar['executed_' || $id1] = 1;\n\t\t\t\t\t\t$new_amount_left2 = $amount_left2 - $buy_amount1;\n\t\t\t\t\t\tif ($new_amount_left2)\n\t\t\t\t\t\t\tvar['amount_left_' || $id2] = $new_amount_left2;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvar['executed_' || $id2] = 1;\n\n\t\t\t\t\t\t// parsable response for transaction log\n\t\t\t\t\t\tresponse[$order1.address || '_' || $order1.sell_asset] = -$amount_left1;\n\t\t\t\t\t\tresponse[$order2.address || '_' || $order2.buy_asset] = $amount_left1;\n\t\t\t\t\t\tresponse[$order1.address || '_' || $order1.buy_asset] = $buy_amount1;\n\t\t\t\t\t\tresponse[$order2.address || '_' || $order2.sell_asset] = -$buy_amount1;\n\t\t\t\t\t}`\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{ // silently accept coins\n\t\t\t\tif: \"{!trigger.data}\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: `{\n\t\t\t\t\t\t$asset = trigger.output[[asset!=base]].asset;\n\t\t\t\t\t\tif ($asset == 'ambiguous')\n\t\t\t\t\t\t\tbounce('ambiguous asset');\n\t\t\t\t\t\tif (trigger.output[[asset=base]] > 10000){\n\t\t\t\t\t\t\t$base_key = 'balance_'||trigger.address||'_'||'base';\n\t\t\t\t\t\t\tvar[$base_key] = var[$base_key] + trigger.output[[asset=base]];\n\t\t\t\t\t\t\t$response_base = trigger.output[[asset=base]] || ' bytes\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($asset != 'none'){\n\t\t\t\t\t\t\t$asset_key = 'balance_'||trigger.address||'_'||$asset;\n\t\t\t\t\t\t\tvar[$asset_key] = var[$asset_key] + trigger.output[[asset=$asset]];\n\t\t\t\t\t\t\t$response_asset = trigger.output[[asset=$asset]] || ' of ' || $asset || '\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponse['message'] = 'accepted coins:\\n' || ($response_base otherwise '') || ($response_asset otherwise '');\n\t\t\t\t\t}`\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},"2d81":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: {\n\t\tcases: [\n\t\t\t{\n\t\t\t\tif: `{trigger.output[[asset=base]] >= 1e6}`,\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: 'base',\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{ address: '{trigger.address}' }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: 'base',\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{ address: 'X55IWSNMHNDUIYKICDW3EOYAWHRUKANP', amount: `{round(trigger.output[[asset=base]]/2)}` },\n\t\t\t\t\t\t\t{ address: '{trigger.address}' }, // no amount here meaning that this output receives all the remaining coins\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},3:function(t,e){},"383e":function(t,e,n){},"38c2":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\t/*\n\tThis is a 51% attack game.\n\n\tSeveral teams are competing to collect at least 51% of all contributions. The contributors of the winning team will divide all collected funds amongst themselves, thus making up to 2x profit.\n\t\n\tContributors receive shares of their team in exchange for Bytes. Shares can be freely traded.\n\t\n\tAs soon as any team reaches 51%, it stops accepting new contributions and a 1-day challenging period starts.  During the challenging period, other teams continue collecting contributions and if any of them reaches 51%, the challenging period restarts with the new candidate winner.\n\n\tIf the challenging period expires without change of candidate winner, the candidate winner team becomes the winner.  Contributors of the winner team can exchange their shares back to Bytes (with a profit).  The winnings are distributed in proportion to the contributions, minus the founder tax.\n\n\tAnyone can create a new team.  The team founder can set a tax: a % that all his followers will pay to him if his team wins.\n\n\tWhile trying to challenge the candidate winner, the contender teams can use fundraising proxy AA which makes sure that the raised funds will be sent to the game only if 51% is actually attained, otherwise the funds can be safely refunded.\n\t*/\n\t\n\tinit: `{\n\t\t$team_creation_fee = 5000;\n\t\t$challenging_period = 24*3600;\n\t\t$bFinished = var['finished'];\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // create a new team; any excess amount is sent back\n\t\t\t\tif: `{trigger.data.create_team AND !$bFinished}`,\n\t\t\t\tinit: `{\n\t\t\t\t\tif (var['team_' || trigger.address || '_amount'])\n\t\t\t\t\t\tbounce('you already have a team');\n\t\t\t\t\tif (trigger.output[[asset=base]] < $team_creation_fee)\n\t\t\t\t\t\tbounce('not enough to pay for team creation');\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tif: `{trigger.output[[asset=base]] > $team_creation_fee}`,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: 'base',\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=base]] - $team_creation_fee}\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['team_' || trigger.address || '_founder_tax'] = trigger.data.founder_tax otherwise 0;\n\t\t\t\t\t\t\tvar['team_' || trigger.address || '_asset'] = response_unit;\n\t\t\t\t\t\t\tresponse['team_asset'] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // contribute to a team\n\t\t\t\tif: `{trigger.data.team AND !$bFinished}`,\n\t\t\t\tinit: `{\n\t\t\t\t\tif (!var['team_' || trigger.data.team || '_asset'])\n\t\t\t\t\t\tbounce('no such team');\n\t\t\t\t\tif (var['winner'] AND var['winner'] == trigger.data.team)\n\t\t\t\t\t\tbounce('contributions to candidate winner team are not allowed');\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: `{var['team_' || trigger.data.team || '_asset']}`,\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=base]]}\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['team_' || trigger.data.team || '_amount'] += trigger.output[[asset=base]];\n\t\t\t\t\t\t\tif (var['team_' || trigger.data.team || '_amount'] > balance[base]*0.51){\n\t\t\t\t\t\t\t\tvar['winner'] = trigger.data.team;\n\t\t\t\t\t\t\t\tvar['challenging_period_start_ts'] = timestamp;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // finish the challenging period and set the winner\n\t\t\t\tif: `{trigger.data.finish AND !$bFinished}`,\n\t\t\t\tinit: `{\n\t\t\t\t\tif (!var['winner'])\n\t\t\t\t\t\tbounce('no candidate winner yet');\n\t\t\t\t\tif (timestamp < var['challenging_period_start_ts'] + $challenging_period)\n\t\t\t\t\t\tbounce('challenging period not expired yet');\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['finished'] = 1;\n\t\t\t\t\t\t\tvar['total'] = balance[base];\n\t\t\t\t\t\t\tvar['challenging_period_start_ts'] = false;\n\t\t\t\t\t\t\tresponse['winner'] = var['winner'];\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // pay out the winnings\n\t\t\t\tif: `{\n\t\t\t\t\tif (!$bFinished)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t$winner = var['winner'];\n\t\t\t\t\t$winner_asset = var['team_' || $winner || '_asset'];\n\t\t\t\t\t$asset_amount = trigger.output[[asset=$winner_asset]];\n\t\t\t\t\t$asset_amount > 0\n\t\t\t\t}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$share = $asset_amount / var['team_' || $winner || '_amount'];\n\t\t\t\t\t$founder_tax = var['team_' || $winner || '_founder_tax'];\n\t\t\t\t\t$amount = round(( $share * (1-$founder_tax) + (trigger.address == $winner AND !var['founder_tax_paid'] ? $founder_tax : 0) ) * var['total']);\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{$amount}\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tif (trigger.address == $winner)\n\t\t\t\t\t\t\t\tvar['founder_tax_paid'] = 1;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}";e.default=a},"3ca3":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // withdraw funds\n\t\t\t\tif: `{\n\t\t\t\t\t$key = 'balance_'||trigger.address||'_'||trigger.data.asset;\n\t\t\t\t\t$base_key = 'balance_'||trigger.address||'_'||'base';\n\t\t\t\t\t$fee = 1000;\n\t\t\t\t\t$required_amount = trigger.data.amount + ((trigger.data.asset == 'base') ? $fee : 0);\n\t\t\t\t\ttrigger.data.withdraw AND trigger.data.asset AND trigger.data.amount AND $required_amount <= var[$key] AND $fee <= var[$base_key]\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{trigger.data.asset}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.data.amount}\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar[$key] = var[$key] - trigger.data.amount;\n\t\t\t\t\t\t\tvar[$base_key] = var[$base_key] - $fee;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // silently accept coins\n\t\t\t\tif: \"{!trigger.data.withdraw}\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: `{\n\t\t\t\t\t\t$asset = trigger.output[[asset!=base]].asset;\n\t\t\t\t\t\tif ($asset == 'ambiguous')\n\t\t\t\t\t\t\tbounce('ambiguous asset');\n\t\t\t\t\t\tif (trigger.output[[asset=base]] > 10000){\n\t\t\t\t\t\t\t$base_key = 'balance_'||trigger.address||'_'||'base';\n\t\t\t\t\t\t\tvar[$base_key] = var[$base_key] + trigger.output[[asset=base]];\n\t\t\t\t\t\t\t$response_base = trigger.output[[asset=base]] || ' bytes\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($asset != 'none'){\n\t\t\t\t\t\t\t$asset_key = 'balance_'||trigger.address||'_'||$asset;\n\t\t\t\t\t\t\tvar[$asset_key] = var[$asset_key] + trigger.output[[asset=$asset]];\n\t\t\t\t\t\t\t$response_asset = trigger.output[[asset=$asset]] || ' of ' || $asset || '\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponse['message'] = 'accepted coins:\\n' || ($response_base otherwise '') || ($response_asset otherwise '');\n\t\t\t\t\t}`\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},4:function(t,e){},4199:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a={id:"oscript",tokensProvider:{defaultToken:"invalid",keywords:["if","else","return","true","false"],builtins:["var","bounce","response","response_unit","timestamp","mci","mc_unit","this_address","base","data_feed","in_data_feed","attestation","balance","address","amount","asset","attestors","ifseveral","ifnone","type","oracles","feed_name","min_mci","feed_value","what","min","max","pi","e","sqrt","ln","ceil","floor","round","abs","hypot","is_valid_signed_package","sha256","is_valid_sig","json_parse","json_stringify","number_from_seed"],operators:["=",">","<","!","!!","?",":","==","<=",">=","!=","||","+","-","*","/","%","^","+=","-=","*=","/=","%=","||=","OR","AND","NOT","OTHERWISE","or","and","not","otherwise"],symbols:/[=><!?:|+\-*\/%^]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/\d*\.\d+([eE][-+]?\d+)?/,"number.float"],[/\d+([eE][-+]?\d+)?/,"number"],[/this address/,"keyword"],[/other address/,"keyword"],[/trigger\.data/,"keyword"],[/trigger\.address/,"keyword"],[/trigger\.output/,"keyword"],[/trigger\.unit/,"keyword"],[/trigger\.initial_address/,"keyword"],[/\w+\b/,{cases:{"@builtins":"keyword","@keywords":"keyword","@default":"identifier"}}],[/\$\{/,{token:"variable",next:"@localVariable"}],[/\$\w+/,"variable"],{include:"@whitespace"},[/[{}()[\]]/,"@brackets"],[/@symbols/,{cases:{"@operators":"operator"}}],[/OR|or|AND|and|NOT|not|otherwise|OTHERWISE/,"operator"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string_double"],[/'/,"string","@string_single"],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],comment:[[/[^\/*]+/,"comment"],[/[\/*]/,"comment"]],localVariable:[[/}/,{token:"variable",next:"@pop"}],{include:"root"}],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",bracket:"@close",next:"@pop"}]],string_double:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]],string_single:[[/[^\\']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'/,"string","@pop"]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}},conf:{brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],comments:{lineComment:"//",blockComment:["/*","*/"]}}};e.default=a},"41cb":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("2b0e")),r=a(n("8c4f")),o=n("4570");s.default.use(r.default);var i=new r.default({mode:"history",base:"/",routes:[{path:"/",name:"home",component:o.EditorPage},{path:"/s/:id",name:"savedhome",component:o.EditorPage}]});e.default=i},4360:function(t,e,n){"use strict";var a=n("e54b"),s=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=f,n("8e6e"),n("456d"),n("7f7f");var r=s(n("bd86")),o=s(n("768b"));n("ac6a"),n("ffc1");var i=s(n("2b0e")),l=s(n("2f62")),u=s(n("0e44")),c=s(n("9b02")),d=a(n("2a74"));function m(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,a)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?m(n,!0).forEach(function(e){(0,r.default)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):m(n).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function f(){var t=new l.default.Store({modules:Object.entries(d).map(function(t){var e=(0,o.default)(t,2),n=e[0],a=e[1];return{key:n,value:a()}}).reduce(function(t,e){return p({},t,(0,r.default)({},e.key,e.value))},{}),plugins:[(0,u.default)({key:"persistedState",paths:["ui"]}),(0,u.default)({key:"persistedAgents",paths:["agents.selected","agents.userAgents"],getState:function(t,e){var n=JSON.parse(e[t]||"{}");return{agents:p({},n.agents,{selected:(0,c.default)(n,"agents.selected")||"template_0"})}}})]});return t}i.default.use(l.default)},"43f4":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tbounce_fees: { base: 10000 },\n\tmessages: [\n\t\t{\n\t\t\tapp: 'payment',\n\t\t\tpayload: {\n\t\t\t\tasset: 'base',\n\t\t\t\toutputs: [\n\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=base]] - 1000}\"}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}";e.default=a},"44e9":function(t,e,n){},4570:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"EditorPage",{enumerable:!0,get:function(){return s.default}});var s=a(n("79c7"))},4606:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.SET_LAST_INPUT=e.SET_WRAP_LINES=e.SET_THEME=void 0,n("96cf");var s=a(n("3b8d")),r=a(n("bd86")),o=a(n("4d1a")),i="ui/settings/theme";e.SET_THEME=i;var l="ui/settings/wrapLines";e.SET_WRAP_LINES=l;var u="ui/lastInput";e.SET_LAST_INPUT=u;var c=function(){var t;return{namespaced:!0,state:{settings:{theme:"dark",wrapLines:!0},lastInput:"",agentTemplates:o.default,userAgents:[]},mutations:(t={},(0,r.default)(t,i,function(t,e){t.settings.theme=e}),(0,r.default)(t,l,function(t,e){t.settings.wrapLines=e}),(0,r.default)(t,u,function(t,e){t.lastInput=e}),t),actions:{setTheme:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:a=e.commit,a(i,n);case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),setWrapLines:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:a=e.commit,a(l,n);case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),setLastInput:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:a=e.commit,a(u,n);case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}()}}};e.default=c},"4d1a":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("2d81")),r=a(n("43f4")),o=a(n("a676")),i=a(n("a494")),l=a(n("1d0e")),u=a(n("fecd")),c=a(n("8ebb")),d=a(n("2c35")),m=a(n("a344")),p=a(n("8b5d")),f=a(n("3ca3")),b=a(n("f6fe")),g=a(n("acd0")),h=a(n("38c2")),$=a(n("c427")),y=a(n("036b")),v={"Just a bouncer":r.default,"Forwarder of bytes":c.default,"Bounce half of balance":p.default,"Create an asset":o.default,"Sell asset for Bytes":m.default,"Bank with deposits without interest":f.default,"Option contract":i.default,"Futures contract":u.default,"Payment channels":l.default,"Order book exchange":d.default,"Uniswap-like market maker":b.default,"Send all":s.default,"Sending prepared objects through trigger.data":g.default,"51% attack game":h.default,"Fundraising proxy":$.default,"ICO with milestone based release of funds":y.default};e.default=v},"50c0":function(t,e,n){"use strict";n.r(e);var a=n("a77b"),s=n.n(a);for(var r in a)"default"!==r&&function(t){n.d(e,t,function(){return a[t]})}(r);e["default"]=s.a},"56d7":function(t,e,n){"use strict";var a=n("e54b"),s=n("288e");n("456d"),n("ac6a"),n("cadf"),n("551c"),n("f751"),n("097d");var r=s(n("2b0e")),o=a(n("c2c6")),i=s(n("1881")),l=s(n("5fad")),u=s(n("41cb")),c=s(n("4360"));Object.keys(i.default).forEach(function(t){var e=i.default[t];o.languages.register({id:e.id}),o.languages.setMonarchTokensProvider(e.id,e.tokensProvider),e.conf&&o.languages.setLanguageConfiguration(e.id,e.conf),e.suggestions&&o.languages.registerCompletionItemProvider(e.id,{provideCompletionItems:function(t,n){return{suggestions:e.suggestions(t,n)}}}),e.hovers&&o.languages.registerHoverProvider(e.id,{provideHover:function(t,n){return e.hovers(t,n)}})}),o.editor.defineTheme("dark",{base:"vs-dark",inherit:!0,rules:[{token:"variable",foreground:"00d0b3"},{token:"keyword.ojson",foreground:"ffc966"},{token:"autocomplete",foreground:"CE9178"}]}),o.editor.defineTheme("white",{base:"vs",inherit:!0,rules:[{token:"variable",foreground:"00d0b3"},{token:"keyword.ojson",foreground:"c28800"},{token:"autocomplete",foreground:"A31515"}]}),r.default.config.productionTip=!1,new r.default({router:u.default,store:c.default,render:function(t){return t(l.default)}}).$mount("#app")},5741:function(t,e,n){"use strict";var a=n("e54b");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("c2c6")),r=[{label:"false",insertText:"false",kind:s.languages.CompletionItemKind.Keyword},{label:"if",insertText:"if",kind:s.languages.CompletionItemKind.Keyword},{label:"return",insertText:"return",kind:s.languages.CompletionItemKind.Keyword},{label:"true",insertText:"true",kind:s.languages.CompletionItemKind.Keyword},{label:"var",insertText:"var",kind:s.languages.CompletionItemKind.Keyword,detail:"`var` state variable",documentation:{value:"\nState variables are persisted across invocations of autonomous agents.\n\nAccessing state variables:\n\n\t`{\n\tvar['var_name1']\n\tvar['JVUJQ7OPBJ7ZLZ57TTNFJIC3EW7AE2RY']['var_name1']\n\t}`\n\nAssigning state variables:\n\n\t`{\n\tvar['var_name1'] = 'var_value';\n\tvar['var_name2'] = 10;\n\tvar['var_name3'] += 10;\n\tvar['var_name4'] = false;\n\t}`\n\n`var['var_name']` reads the value of state variable `var_name` stored under current AA.\n\n`var['AA_ADDRESS']['var_name']` reads the value of state variable `var_name` stored under AA `AA_ADDRESS`.  `AA_ADDRESS` is a valid address or `this address` to refer to the current AA.\n\nIf there is no such variable, `false` is returned.\n\nState variables can be accessed in any oscript but can be assigned only in state script.  Only state vars of the current AA can be assigned, state vars of other AAs are read-only.  State vars can be reassigned multiple times but only the final value will be saved to the database and only if the AA finishes successfully.  All changes are committed atomically.  If the AA fails, all changes to state vars are rolled back.\n\nState vars can temporarily hold strings, numbers, and booleans but when persisting, `true` values are converted to 1 and `false` values result in removal of the state variable from storage.\n\nIf the right-hand side of the assignment is an object, `true` is assigned.  State vars cannot hold objects.\n\nIn addition to regular assignment `=`, state variables can also be modified in place using the following operators:\n* `+=`: increment by;\n* `-=`: decrement by;\n* `*=`: multiply by;\n* `/=`: divide by;\n* `%=`: remainder of division by;\n* `||=`: concatenate to the end of string.\n\nFor concatenation, the existing value of the var is converted to string.\n\nFor `+=`, `-=`, `*=`, `/=`, `%=`, the existing boolean value is converted to 1 or 0, strings result in error.\n\nIf the variable didn't exist prior to one of these assignments, it is taken as `false` and converted to number or string accordingly.\n\nEach read or write operation on a state variable adds +1 to complexity.  Assignment with modification also costs 1 in complexity.\n\nExamples:\n\n\t`{\n\tvar['sent_back'] = $half_amount;\n\tvar['count_investors'] += 1;\n\tvar['amount_owed'] += trigger.output[[asset=base]];\n\tvar['pending'] = false;\n\t$x = var['JVUJQ7OPBJ7ZLZ57TTNFJIC3EW7AE2RY']['var_name1'];\n\t}`\n"}},{quoted:!1,label:"trigger.output",insertText:"trigger.output",kind:s.languages.CompletionItemKind.Keyword,detail:"`trigger.output` external reference",documentation:{value:"\n\t`{\n\ttrigger.output[[asset=assetName]].field\n\ttrigger.output[[asset!=assetName]].field\n\t}`\n\nOutput sent to the AA address in the specified asset.\n\n`assetName` can be `base` for bytes or any expression that evaluates to asset ID.\n\n`field` can be `amount` or `asset` or omitted.  If omitted, `amount` is assumed.  If the trigger unit had several outputs in the same asset to this AA address, their amounts are summed.\n\nThe search criteria can be `=` (`asset=assetName`) or `!=` (`asset!=assetName`).\n\nExamples:\n\n\t`{\n\ttrigger.output[[asset=base]]\n\ttrigger.output[[asset=base]].amount\n\ttrigger.output[[asset=\"j52n7Bfec9jW\"]]\n\ttrigger.output[[asset=$asset]]\n\ttrigger.output[[asset!=base]]\n\ttrigger.output[[asset!=base]].amount\n\tif (trigger.output[[asset!=base]].asset == 'ambiguous'){\n\t\t...\n\t}\n\t}`\n\nIf there is no output that satisfies the search criteria, the returned `.amount` is 0 and the returned `.asset` is a string `none`.  Your code should check for this string if necessary.\n\nIf there is more than one output that satisfies the search criteria (which is possible only for `!=`), the returned `.asset` is a string `ambiguous`.  Your code should check for this string if necessary.  Trying to access `.amount` of an ambiguous asset fails the script.\n"}},{quoted:!1,label:"trigger.data",insertText:"trigger.data",kind:s.languages.CompletionItemKind.Keyword,detail:"`trigger.data` external reference",documentation:{value:'\nData sent with the trigger unit in its `data` message.  `trigger.data` returns the entire data object, `trigger.data.field1.field2` or `trigger.data.field1[expr2]` tries to access a deeper nested field:\n* if it is an object, object is returned;\n* if it is a scalar (string, number, or boolean), scalar is returned;\n* if it doesn\'t exist, `false` is returned.\n\nFor example, if the trigger unit had this data message\n\n\t{\n\t\t"app": "data",\n\t\t"payload": {\n\t\t\t"field1": {\n\t\t\t\t"field2": "value2",\n\t\t\t\t"abc": 88\n\t\t\t},\n\t\t\t"abc": "def"\n\t\t},\n\t\t"payload_hash": "..."\n\t}\n\n`trigger.data` would be equal to\n\n\t{\n\t\t"field1": {\n\t\t\t"field2": "value2",\n\t\t\t"abc": 88\n\t\t},\n\t\t"abc": "def"\n\t}\n\n`trigger.data.field1` would be equal to\n\n\t{\n\t\t"field2": "value2",\n\t\t"abc": 88\n\t}\n\n`trigger.data.field1.field2` would be equal to string `value2`,\n\n`trigger.data.field1[\'a\' || \'bc\']` would be equal to number `88`,\n\n`trigger.data.field1.nonexistent` would be equal to boolean `false`,\n\n`trigger.data.nonexistent.anotherfield` would be equal to boolean `false`.\n'}},{quoted:!1,label:"trigger.unit",insertText:"trigger.unit",kind:s.languages.CompletionItemKind.Keyword,detail:"`trigger.unit` external reference",documentation:{value:"\nThe unit that sent money to this AA.\n"}},{quoted:!1,label:"trigger.address",insertText:"trigger.address",kind:s.languages.CompletionItemKind.Keyword,detail:"`trigger.address` external reference",documentation:{value:"\nThe address of the sender who sent money to this AA.  If the sending unit was signed by several addresses, the first one is used.\n"}},{quoted:!1,label:"trigger.initial_address",insertText:"trigger.initial_address",kind:s.languages.CompletionItemKind.Keyword,detail:"`trigger.initial_address` external reference",documentation:{value:"\nThe address of the sender who sent money to the initial AA of a chain of AAs. Same as `trigger.address` if there was no chain.  When an AA sends money to another AA, `trigger.initial_address` remains unchanged.\n"}},{quoted:!1,label:"mci",insertText:"mci",kind:s.languages.CompletionItemKind.Keyword,detail:"`mci` external reference",documentation:{value:"\nMCI of the trigger unit, which is the same as MCI of MC unit the response unit (if any) will be attached to.\n"}},{quoted:!1,label:"timestamp",insertText:"timestamp",kind:s.languages.CompletionItemKind.Keyword,detail:"`timestamp` external reference",documentation:{value:"\nTimestamp of the MC unit that recently became stable, this is the unit whose stabilization triggered the execution of this AA.  This is the same unit the response unit (if any) will be attached to.\n"}},{quoted:!1,label:"min_mci",insertText:"min_mci",kind:s.languages.CompletionItemKind.Keyword,detail:"`min_mci` external reference",documentation:{value:"\nHash of the MC unit that includes (or is equal to) the trigger unit.\n"}},{quoted:!1,label:"this_address",insertText:"this_address",kind:s.languages.CompletionItemKind.Keyword,detail:"`this_address` external reference",documentation:{value:"\n`this_address`, `this address`\nThe address of this AA.\n"}},{quoted:!1,label:"response_unit",insertText:"response_unit",kind:s.languages.CompletionItemKind.Keyword,detail:"`response_unit` external reference",documentation:{value:"\nThe hash of the unit that will be generated by the AA in response to the trigger.  This variable is available only in state script.  Any references to this variable in any other scripts will fire an error.\n"}},{quoted:!1,label:"mc_unit",insertText:"mc_unit",kind:s.languages.CompletionItemKind.Keyword,detail:"`mc_unit` external reference",documentation:{value:"\nThe hash of the MC unit that includes (or is equal to) the trigger unit.\n"}},{quoted:!1,label:"asset[",insertText:"asset",kind:s.languages.CompletionItemKind.Keyword,detail:"`asset` external reference",documentation:{value:'\n\t`{\n\tasset[expr].field\n\tasset[expr].[field_expr]\n\t}`\n\nExtracts information about an asset. This adds +1 to complexity. `expr` is `base` for bytes or an expression that evaluates to an asset ID.\n\n`field` is on of the following, `field_expr` should evaluate to one of the following:\n* `cap`: number, total supply of the asset.  For uncapped assets, 0 is returned;\n* `is_private`: boolean, is the asset private?\n* `is_transferrable`: boolean, is the asset transferrable?\n* `auto_destroy`: boolean, does the asset gets autodestroyed when sent to definer address?\n* `fixed_denominations`: boolean,is the asset issued in fixed denominations?\n* `issued_by_definer_only`: boolean, is the asset issued by definer only?\n* `cosigned_by_definer`: boolean, should each transfer be cosigned by definer?\n* `spender_attested`: boolean, should each holder be attested?\n* `is_issued`: boolean, is any amount of the asset already issued?\n\nExamples:\n\n\t`{\n\tasset[base].cap\n\tasset["base"].cap\n\tasset["n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY="].is_issued\n\tasset["n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY="][\'is_\' || \'issued\']\n\t}`\n\nIf the asset does not exist, `false` is returned for any field.\n'}},{quoted:!1,label:"data_feed",insertText:"data_feed",kind:s.languages.CompletionItemKind.Keyword,detail:"`data_feed` external reference",documentation:{value:"\n\t`{\n\tdata_feed[[oracles=listOfOracles, feed_name=nameOfDataFeed, ...]]\n\t}`\n\nFinds data feed value by search criteria.  This adds +1 to complexity.\n\nThere are multiple search criteria listed between the double brackets, their order is insignificant.\n* `oracles`: string, list of oracle addresses delimited by `:` (usually only one oracle). `this address` is also a valid oracle address and it refers to the current AA;\n* `feed_name`: string, the name of the data feed;\n* `feed_value`: string or number, optional, search only for this specific value of the data feed;\n* `min_mci`: number, optional, search only since the specified MCI;\n* `ifseveral`: string, optional, `last` or `abort`, what to do if several values found that match all the search criteria, return the last one or abort the script with error, default is `last`\n* `ifnone`: string or number or boolean, optional, the value to return if nothing is found.  By default, this results in an error and aborts the script;\n* `what`: string, optional, `value` or `unit`, what to return, the data feed value or the unit where it was posted, default is `value`;\n* `type`: string, optional, `auto` or `string`, what type to return, default is `auto`.  For `auto`, data feed values that look like valid IEEE754 numbers are returned as numbers, otherwise they are returned as strings.  If `string`, the returned value is always a string.  This setting affects only the values extracted from the database; if `ifnone` is used, the original type of `ifnone` value is always preserved.\n\nData feeds are searched before the MCI of the triggering unit (inclusively).  If there are several AAs stemming from the same MCI, previous AA responses are also searched.\n\nExamples:\n\n\t`{\n\tdata_feed[[oracles='JPQKPRI5FMTQRJF4ZZMYZYDQVRD55OTC', feed_name='BTC_USD']]\n\tdata_feed[[oracles=this address, feed_name='score']]\n\tdata_feed[[oracles='JPQKPRI5FMTQRJF4ZZMYZYDQVRD55OTC:I2ADHGP4HL6J37NQAD73J7E5SKFIXJOT', feed_name='timestamp']]\n\t}`\n"}},{quoted:!1,label:"in_data_feed",insertText:"in_data_feed",kind:s.languages.CompletionItemKind.Keyword,detail:"`in_data_feed` external reference",documentation:{value:"\n\t`{\n\tin_data_feed[[oracles=listOfOracles, feed_name=nameOfDataFeed, feed_value>feedValue, ...]]\n\t}`\n\nDetermines if a data feed can be found by search criteria.  Returns `true` or `false`.  This adds +1 to complexity.\n\nThere are multiple search criteria listed between the double brackets, their order is insignificant.\n* `oracles`: string, list of oracle addresses delimited by `:` (usually only one oracle). `this address` is also a valid oracle address and it refers to the current AA;\n* `feed_name`: string, the name of the data feed;\n* `feed_value`: string or number, search only for values of the data feed that are `=`, `!=`, `>`, `>=`, `<`, or `<=` than the specified value;\n* `min_mci`: number, optional, search only since the specified MCI.\n\nData feeds are searched before the MCI of the triggering unit (inclusively).  If there are several AAs stemming from the same MCI, previous AA responses are also searched.\n\nExamples:\n\n\t`{\n\tin_data_feed[[oracles='JPQKPRI5FMTQRJF4ZZMYZYDQVRD55OTC', feed_name='BTC_USD', feed_value > 12345.67]]\n\tin_data_feed[[oracles=this address, feed_name='score', feed_value=$score]]\n\tin_data_feed[[oracles='JPQKPRI5FMTQRJF4ZZMYZYDQVRD55OTC:I2ADHGP4HL6J37NQAD73J7E5SKFIXJOT', feed_name='timestamp', feed_value>=1.5e9]]\n\t}`\n"}},{quoted:!1,label:"attestation",insertText:"attestation",kind:s.languages.CompletionItemKind.Keyword,detail:"`attestation` external reference",documentation:{value:"\n\t`{\n\tattestation[[attestors=listOfAttestors, address=attestedAddress, ...]].field\n\tattestation[[attestors=listOfAttestors, address=attestedAddress, ...]][field_expr]\n\t}`\n\nFinds an attestation by search criteria.  This adds +1 to complexity.\n\nThere are multiple search criteria listed between the double brackets, their order is insignificant.\n* `attestors`: string, list of attestor addresses delimited by `:` (usually only one attestor). `this address` is also a valid attestor address and it refers to the current AA;\n* `address`: string, the address that was attested;\n* `ifseveral`: string, optional, `last` or `abort`, what to do if several matching attestations are found, return the last one or abort the script with error, default is `last`\n* `ifnone`: string or number or boolean, optional, the value to return if nothing is found.  By default, this results in an error and aborts the script;\n* `type`: string, optional, `auto` or `string`, what type to return, default is `auto`.  For `auto`, attested field values that look like valid IEEE754 numbers are returned as numbers, otherwise they are returned as strings.  If `string`, the returned value is always a string.  This setting affects only the values extracted from the database; if `ifnone` is used, the original type of `ifnone` value is always preserved.\n\n`field` string or `field_expr` expression are optional and they indicate the attested field whose value should be returned.  Without `field` or `field_expr`, `true` is returned if an attestation is found.\n\nIf no matching attestation is found, `ifnone` value is returned (independently of `field`).  If there is no `ifnone`, `false` is returned.\n\nIf a matching attestation exists but the requested field does not, the result is as if the attestation did not exist.\n\nAttestations are searched before the MCI of the triggering unit (inclusively).  If there are several AAs stemming from the same MCI, previous AA responses are also searched.\n\nExamples:\n\n\t`{\n\tattestation[[attestors='UOYYSPEE7UUW3KJAB5F4Y4AWMYMDDB4Y', address='BI2MNEVU4EFWL4WSBILFK7GGMVNS2Q3Q']].email\n\tattestation[[attestors=this address, address=trigger.address]]\n\tattestation[[attestors='JEDZYC2HMGDBIDQKG3XSTXUSHMCBK725', address='TSXOWBIK2HEBVWYTFE6AH3UEAVUR2FIF', ifnone='anonymous']].steem_username\n\tattestation[[attestors='JEDZYC2HMGDBIDQKG3XSTXUSHMCBK725', address='TSXOWBIK2HEBVWYTFE6AH3UEAVUR2FIF']].reputation\n\t}`\n"}},{quoted:!1,label:"input",insertText:"input",kind:s.languages.CompletionItemKind.Keyword,detail:"`input` external reference",documentation:{value:'\n\t`{\n\tinput[[asset=assetID, amount=amountValue, address=inputAddress]].field\n\t}`\n\nTries to find an input in the current unit by search criteria.\n\nThese language constructs are available only in non-AA formulas in smart contracts (`["formula", ...]` clause).\n\nThere are multiple search criteria listed between the double brackets, their order is insignificant.  All search criteria are optional but at least one must be present.\n* `asset`: string, asset of input, can be `base` for bytes.  Comparison operators can be only `=` or `!=`;\n* `address`: string, the address receives spends an input, can be `this address` or `other address`.  Comparison operators can be only `=` or `!=`;\n* `amount`: number, the condition for the amount of an input.  Allowed comparison operators are: `=`, `!=`, `>`, `>=`, `<`, `<=`.\n\n`field` is one of `amount`, `address`, and `asset`.  It indicates which information about the input we are interested in.\n\nIf no input is found by search criteria or there is more than one matching entry, the formula fails.\n\nExamples:\n\n\t`{\n\tinput[[asset=base]].amount\n\t}`\n'}},{quoted:!1,label:"output",insertText:"output",kind:s.languages.CompletionItemKind.Keyword,detail:"`output` external reference",documentation:{value:'\n\t`{\n\toutput[[asset=assetID, amount>minAmount, address=outputAddress]].field\n\t}`\n\nTries to find an output in the current unit by search criteria.\n\nThese language constructs are available only in non-AA formulas in smart contracts (`["formula", ...]` clause).\n\nThere are multiple search criteria listed between the double brackets, their order is insignificant.  All search criteria are optional but at least one must be present.\n* `asset`: string, asset of or output, can be `base` for bytes.  Comparison operators can be only `=` or `!=`;\n* `address`: string, the address receives an output, can be `this address` or `other address`.  Comparison operators can be only `=` or `!=`;\n* `amount`: number, the condition for the amount of an output.  Allowed comparison operators are: `=`, `!=`, `>`, `>=`, `<`, `<=`.\n\n`field` is one of `amount`, `address`, and `asset`.  It indicates which information about the output we are interested in.\n\nIf no output is found by search criteria or there is more than one matching entry, the formula fails.\n\nExamples:\n\n\t`{\n\toutput[[asset = base, address=GFK3RDAPQLLNCMQEVGGD2KCPZTLSG3HN]].amount\n\toutput[[asset = base, address="GFK3RDAPQLLNCMQEVGGD2KCPZTLSG3HN"]].amount\n\toutput[[asset = "n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY=", amount>=100]].address\n\t}`\n'}},{label:"sqrt",insertText:"sqrt",kind:s.languages.CompletionItemKind.Function,detail:"`sqrt` built-in",documentation:{value:"\n`sqrt(number)`\nThis function adds +1 to complexity count.\n\nNegative numbers cause an error.  Non-number inputs are converted to numbers or result in error.\n"}},{label:"ln",insertText:"ln",kind:s.languages.CompletionItemKind.Function,detail:"`ln` built-in",documentation:{value:"\n`ln(number)`\nThis function adds +1 to complexity count.\n\nNegative numbers cause an error. Non-number inputs are converted to numbers or result in error.\n"}},{label:"abs",insertText:"abs",kind:s.languages.CompletionItemKind.Function,detail:"`abs` built-in",documentation:{value:"\n`abs(number)`\nReturns absolute value of a number. Non-number inputs are converted to numbers or result in error.\n"}},{label:"round",insertText:"round",kind:s.languages.CompletionItemKind.Function,detail:"`round` built-in",documentation:{value:"\n`round(number [, decimal_places])`\n\nRounds the input number to the specified number of decimal places (0 if omitted). `round` uses `ROUND_HALF_EVEN` rules.  Non-number inputs are converted to numbers or result in error. Negative or non-integer `decimal_places` results in error. `decimal_places` greater than 15 results in error.\n"}},{label:"ceil",insertText:"ceil",kind:s.languages.CompletionItemKind.Function,detail:"`ceil` built-in",documentation:{value:"\n`ceil(number [, decimal_places])`\n\nRounds the input number to the specified number of decimal places (0 if omitted). `round` uses `ROUND_HALF_EVEN` rules.  Non-number inputs are converted to numbers or result in error. Negative or non-integer `decimal_places` results in error. `decimal_places` greater than 15 results in error.\n"}},{label:"floor",insertText:"floor",kind:s.languages.CompletionItemKind.Function,detail:"`floor` built-in",documentation:{value:"\n`floor(number [, decimal_places])`\n\nRounds the input number to the specified number of decimal places (0 if omitted). `round` uses `ROUND_HALF_EVEN` rules.  Non-number inputs are converted to numbers or result in error. Negative or non-integer `decimal_places` results in error. `decimal_places` greater than 15 results in error.\n"}},{label:"min",insertText:"min",kind:s.languages.CompletionItemKind.Function,detail:"`min` built-in",documentation:{value:"\n`min(number1, [number2[, number3[, ...]]])`\n\nReturns minimum among the set of numbers.  Non-number inputs are converted to numbers or result in error.\n"}},{label:"max",insertText:"max",kind:s.languages.CompletionItemKind.Function,detail:"`max` built-in",documentation:{value:"\n`max(number1, [number2[, number3[, ...]]])`\n\nReturns maximum among the set of numbers.  Non-number inputs are converted to numbers or result in error.\n"}},{label:"hypot",insertText:"hypot",kind:s.languages.CompletionItemKind.Function,detail:"`hypot` built-in",documentation:{value:"\n`hypot(number1, [number2[, number3[, ...]]])`\n\nReturns the square root of the sum of squares of all arguments.  Boolean parameters are converted to 1 and 0, objects are taken as 1, all other types result in error.  The function returns a non-infinity result even if some intermediary results (squares) would overflow.\n\nThis function adds +1 to complexity count.\n"}},{label:"json_parse",insertText:"json_parse",kind:s.languages.CompletionItemKind.Function,detail:"`json_parse` built-in",documentation:{value:"\n`json_parse(string)`\n\nAttempts to parse the input JSON string. If the result of parsing is an object, the object is returned.  If the result is a scalar (boolean, string, number), the scalar is returned.\n\nThis function adds +1 to complexity count.\n\nIf parsing fails, `false` is returned.\n\nNon-string input is converted to string.\n"}},{label:"json_stringify",insertText:"json_stringify",kind:s.languages.CompletionItemKind.Function,detail:"`json_stringify` built-in",documentation:{value:"\n`json_stringify(string)`\n\nStringifies the input parameter into JSON.  The parameter can also be a number, boolean, or string.  If it is a number outside the IEEE754 range, the formula fails.  Objects in the returned JSON are sorted by keys.\n"}},{label:"number_from_seed",insertText:"number_from_seed",kind:s.languages.CompletionItemKind.Function,detail:"`number_from_seed` built-in",documentation:{value:"\n\t`{\n\tnumber_from_seed(string)\n\tnumber_from_seed(string, max)\n\tnumber_from_seed(string, min, max)\n\t}`\n\nGenerates a number from a seed string. The same seed always produces the same number. The numbers generated from different seed strings are uniformly distributed in the specified interval.\n\nThe first form returns a fractional number from 0 to 1.\n\nThe second form returns an integer number from 0 to max inclusive.\n\nThe third form returns an integer number from min to max inclusive.\n\nThis function is useful for generating pseudorandom numbers from a seed string.  It adds +1 to complexity count.\n"}},{label:"sha256",insertText:"sha256",kind:s.languages.CompletionItemKind.Function,detail:"`sha256` built-in",documentation:{value:"\n\t`{\n\tsha256(string)\n\t}`\n\nReturns sha256 of input string in base64 encoding.  Non-string inputs are converted to strings. This function adds +1 to complexity count.\n"}},{label:"is_valid_signed_package",insertText:"is_valid_signed_package",kind:s.languages.CompletionItemKind.Function,detail:"`is_valid_signed_package` built-in",documentation:{value:'\n\t`{\n\t\tis_valid_signed_package(signedPackage, address)\n\t}`\n\nReturns `true` if `signedPackage` object is a valid signed package signed by address `address`, returns `false` otherwise (the formula doesn\'t fail even if `signedPackage` doesn\'t have the correct format). `address` must be a valid address, otherwise the expression fails with an error. This function adds +1 to complexity count.\n\n`signedPackage` object is usually passed through the trigger and has the following structure:\n\n\t`{\n\t\t{\n\t\t\t"signed_message": {\n\t\t\t\t"field1": "value1",\n\t\t\t\t"field2": "value2",\n\t\t\t\t...\n\t\t\t},\n\t\t\t"authors": [\n\t\t\t\t{\n\t\t\t\t\t"address": "2QHG44PZLJWD2H7C5ZIWH4NZZVB6QCC7",\n\t\t\t\t\t"authentifiers": {\n\t\t\t\t\t\t"r": "MFZ0eFJeLAgAmm6BJdvbEzNt7x0H2Fb5RQBBpMSmyVFMLM2r2SX5chU9hbEWXExkz/T2hXAk1qHmxkAbbpZw8w=="\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t"last_ball_unit": "izgjyn9bpbJjwpKQV7my0Dq1VUHbzrLpWLrdR0fDydw=",\n\t\t\t"version": "2.0"\n\t\t}\n\t}`\n\nHere:\n* `signed_message` is the message being signed, it can be an object, an array, or scalar;\n* `authors` is an array of authors who signed the message (usually one), it has the same structure as unit authors and includes the signing address, authentifiers (usually signatures) and optionally definitions;\n* `last_ball_unit`: optional unit of last ball that indicates the position on the DAG at which the message was signed. If definition is not included in `author`, it must be known at this point in the ledger history. If there is no `last_ball_unit` in `signedPackage`, including address definition as part of each `author` is required;\n* `version`: always `2.0`.\n\nUsually, `signedPackage` is created by calling `signMessage` function from `signed_message` module:\n\n\t`{\n\t\tvar headlessWallet = require(\'headless-obyte\');\n\t\tvar signed_message = require(\'ocore/signed_message.js\');\n\n\t\tsigned_message.signMessage(message, address, headlessWallet.signer, true, function (err, signedPackage) {\n\t\t\t// handle result here\n\t\t\ttrigger.data.signedPackage = signedPackage;\n\t\t});\n\t}`\n\nThe function creates a correctly structured `signedPackage` object which can be added to `trigger.data`.\n'}},{label:"bounce",insertText:"bounce",kind:s.languages.CompletionItemKind.Function,detail:"`bounce` built-in",documentation:{value:"\n\t`{\n\tbounce(string)\n\t}`\n\nAborts the script's execution with error message passed as the function's argument. The received money will be bounced to sender (less bounce fees).\n"}},{label:"oracles",insertText:"oracles",kind:s.languages.CompletionItemKind.Module,detail:"`oracles` search criteria",documentation:{value:"\n`oracles`: string, list of oracle addresses delimited by `:` (usually only one oracle). `this address` is also a valid oracle address and it refers to the current AA;\n"}},{label:"feed_name",insertText:"feed_name",kind:s.languages.CompletionItemKind.Module,detail:"`feed_name` search criteria",documentation:{value:"\n`feed_name`: string, the name of the data feed;\n"}},{label:"feed_value",insertText:"feed_value",kind:s.languages.CompletionItemKind.Module,detail:"`feed_value` search criteria",documentation:{value:"\n`feed_value`: string or number, optional, search only for this specific value of the data feed;\n"}},{label:"ifseveral",insertText:"ifseveral",kind:s.languages.CompletionItemKind.Module,detail:"`ifseveral` search criteria",documentation:{value:"\n`ifseveral`: string, optional, `last` or `abort`, what to do if several values found that match all the search criteria, return the last one or abort\n"}},{label:"ifnone",insertText:"ifnone",kind:s.languages.CompletionItemKind.Module,detail:"`ifnone` search criteria",documentation:{value:"\n`ifnone`: string or number or boolean, optional, the value to return if nothing is found.  By default, this results in an error and aborts the script;\n"}},{label:"what",insertText:"what",kind:s.languages.CompletionItemKind.Module,detail:"`what` search criteria",documentation:{value:"\n`what`: string, optional, `value` or `unit`, what to return, the data feed value or the unit where it was posted, default is `value`;\n"}},{label:"type",insertText:"type",kind:s.languages.CompletionItemKind.Module,detail:"`type` search criteria",documentation:{value:"\n`type`: string, optional, `auto` or `string`, what type to return, default is `auto`.  For `auto`, data feed values that look like valid IEEE754 numbers are returned as numbers, otherwise they are returned as strings.  If `string`, the returned value is always a string.  This setting affects only the values extracted from the database; if `ifnone` is used, the original type of `ifnone` value is always preserved.\n"}},{label:"attestors",insertText:"attestors",kind:s.languages.CompletionItemKind.Module,detail:"`attestors` search criteria",documentation:{value:"\n`attestors`: string, list of attestor addresses delimited by `:` (usually only one attestor). `this address` is also a valid attestor address and it\n"}},{label:"address",insertText:"address",kind:s.languages.CompletionItemKind.Module,detail:"`address` search criteria",documentation:{value:"\n`address`: string, the address that was attested;\n"}},{label:"balance",insertText:"balance",kind:s.languages.CompletionItemKind.Keyword,detail:"`balance` keyword",documentation:{value:'\n\t`{\n\tbalance[asset]\n\tbalance[aa_address][asset]\n\t}`\n\nReturns the balance of an AA in the specified asset.  If `aa_address` is omitted, the current AA is assumed.  `asset` can be `base` for bytes, asset id for any other asset, or any expression that evaluates to an asset id or `base` string.\n\nThis adds +1 to complexity count.\n\nThe returned balance includes the outputs received from the current trigger.\n\nExamples:\n\n\t`{\n\tbalance[base]\n\tbalance["n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY="]\n\tbalance["JVUJQ7OPBJ7ZLZ57TTNFJIC3EW7AE2RY"][base]\n\t}`\n'}},{label:"response",insertText:"response",kind:s.languages.CompletionItemKind.Keyword,detail:"`response` keyword",documentation:{value:'\n\t`{\n\tresponse[\'key\'] = \'text\';\n\t}`\n\nAdds a key to the response object.  Response variables do not affect state, they are meant to only inform the caller, and other interested parties, about the actions performed by the AA.\n\nResponse vars can only be assigned, never read.  Response vars can be assigned and reassigned multiple times in any oscript.  They can hold values of types: string, number, boolean.  Attempting to assign an object would result in `true` being assigned.\n\nExample: assigning these response variables\n\n\t`{\n\tresponse[\'message\'] = "set exchange rate to 0.123 tokens/byte";\n\tresponse[\'deposit\'] = 2250000;\n\t}`\n\nwill result in the following response object:\n\n\t`{\n\t{\n\t\t"responseVars": {\n\t\t\t\t"message": "set exchange rate to 0.123 tokens/byte",\n\t\t\t\t"deposit": 2250000\n\t\t}\n\t}\n\t}`\n'}},{label:"base",insertText:"base",kind:s.languages.CompletionItemKind.Text},{label:"asset",insertText:"asset",kind:s.languages.CompletionItemKind.Text},{label:"amount",insertText:"amount",kind:s.languages.CompletionItemKind.Text},{label:"pi",insertText:"pi",kind:s.languages.CompletionItemKind.Constant,detail:"`pi` 3.14159265358979",documentation:{value:"\nPi constant rounded to 15 digits precision: 3.14159265358979.\n"}},{label:"e",insertText:"e",kind:s.languages.CompletionItemKind.Constant,detail:"`e` 2.71828182845905",documentation:{value:"\nEuler's number rounded to 15 digits precision: 2.71828182845905.\n"}},{label:"or",insertText:"or",kind:s.languages.CompletionItemKind.Keyword},{label:"and",insertText:"and",kind:s.languages.CompletionItemKind.Keyword},{label:"not",insertText:"not",kind:s.languages.CompletionItemKind.Keyword},{label:"otherwise",insertText:"otherwise",kind:s.languages.CompletionItemKind.Keyword}];e.default=r},"5a3b":function(t,e,n){"use strict";var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"root-editor-page"},[n("div",{staticClass:"editor-controls"},[n("div",{staticClass:"editor-header"},[n("span",[t._v("Oscript Editor")]),t.badge?n("div",{staticClass:"editor-header-badge"},[t._v(t._s(t.badge))]):t._e()]),n("div",{staticClass:"editor-controls-checkbox"},[t._v("\r\n\t\t\tWrap lines:\r\n\t\t\t"),n("input",{attrs:{type:"checkbox"},domProps:{checked:t.wrapLines},on:{change:t.handleWrapLinesCheckbox}})]),n("div",{staticClass:"editor-controls-select"},[t._v("\r\n\t\t\tTheme:\r\n\t\t\t"),n("select",{domProps:{value:t.theme},on:{change:t.handleThemeSelect}},[n("option",[t._v("dark")]),n("option",[t._v("white")])])]),n("div",{staticClass:"editor-controls-select"},[n("agent-controls",{staticClass:"agent-actions",attrs:{isSelectedAgentUser:t.isSelectedAgentUser,selectedLabel:t.selectedAgent.label},on:{rename:t.handleAgentActionRename,delete:t.handleAgentActionDelete,new:t.handleAgentActionNew,share:t.handleAgentActionShare}}),t._v("\r\n\t\t\tAAs:\r\n\t\t\t"),n("select",{domProps:{value:t.selectedAgent.id},on:{change:t.handleTemplateSelect}},[t.userAgents.length?n("optgroup",{attrs:{label:"Autonomous Agents:"}},t._l(t.userAgents,function(e){return n("option",{domProps:{value:e.id}},[t._v(t._s(e.label))])}),0):t._e(),n("optgroup",{attrs:{label:"Templates:"}},t._l(t.templates,function(e){return n("option",{domProps:{value:e.id}},[t._v(t._s(e.label))])}),0)])],1)]),n("div",{staticClass:"editor-container",class:"theme-"+t.theme},[n("monaco-editor",{ref:"editor",staticClass:"editor",attrs:{options:t.editorOptions,language:t.language,theme:t.theme},model:{value:t.code,callback:function(e){t.code=e},expression:"code"}})],1),n("transition",{attrs:{name:"collapse"}},[t.resultPaneOpened?n("div",{staticClass:"result-pane-container",class:"theme-"+t.theme},[n("monaco-editor",{ref:"resultPaneEditor",staticClass:"result-pane",attrs:{options:t.resultPaneEditorOptions,language:"result-highlighter",theme:t.theme},model:{value:t.resultMessage,callback:function(e){t.resultMessage=e},expression:"resultMessage"}})],1):t._e()]),n("a",{staticClass:"documentation-link",attrs:{target:"_blank",href:"https://developer.obyte.org/autonomous-agents",title:"Autonomous Agents Documentation"}},[t._v("Autonomous Agents Documentation")]),n("div",{staticClass:"actions-row"},[n("div",{staticClass:"actions-row-action",on:{click:t.validate}},[t._v("Validate")]),n("div",{staticClass:"actions-row-action",on:{click:t.deploy}},[t._v("Deploy")])]),t._m(0)],1)},s=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"socials-row"},[n("div",{staticClass:"social"},[n("a",{attrs:{href:"https://obyte.org/",title:"Official Website",target:"_blank"}},[n("img",{attrs:{src:"static/images/icons/obyte.png"}})])]),n("div",{staticClass:"social"},[n("a",{attrs:{href:"https://github.com/byteball/oscript-editor",title:"GitHub Repository",target:"_blank"}},[n("img",{attrs:{src:"static/images/icons/github.png"}})])])])}];n.d(e,"a",function(){return a}),n.d(e,"b",function(){return s})},"5eca":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a={};e.default=a},"5fad":function(t,e,n){"use strict";n.r(e);var a=n("f06a"),s=n("25ea");for(var r in s)"default"!==r&&function(t){n.d(e,t,function(){return s[t]})}(r);n("cd69");var o=n("2877"),i=Object(o["a"])(s["default"],a["a"],a["b"],!1,null,null,null);e["default"]=i.exports},"6b99":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a={VALIDATION_ERROR:4001,PARSING_ERROR:4002,INTERNAL_ERROR:5001,AGENT_ALREADY_DEPLOYED_ERROR:5002};e.default=a},"78b8":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"oscriptWordsList",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(e,"ojsonValuesList",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(e,"ojsonKeysList",{enumerable:!0,get:function(){return o.default}});var s=a(n("5741")),r=a(n("0081")),o=a(n("1bda"))},"790f":function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n("96cf");var s=a(n("3b8d")),r=n("3022"),o=a(n("ac55")),i=n("cb85"),l=n("765e"),u=n("83c1"),c=n("2da8"),d=function(){return{namespaced:!0,state:{ojson:u,oscript:c},actions:{parse:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s,r,l,u;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:if(a=e.state,s=n.text,r=n.grammar,l=a[r],l){t.next=5;break}throw new i.UndefinedGrammarError("Grammar '".concat(r,"' undefined"));case 5:return u=new o.default.Parser(o.default.Grammar.fromCompiled(l)),u.feed(s),t.abrupt("return",u.results);case 8:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),parseOjson:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.dispatch,t.abrupt("return",a("parse",{text:n,grammar:"ojson"}));case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),parseOscript:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return a=e.dispatch,t.abrupt("return",a("parse",{text:n,grammar:"oscript"}));case 2:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),validateOjson:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return e.commit,t.prev=1,t.next=4,(0,r.promisify)(l.validateAADefinition)(JSON.parse(n));case 4:t.next=9;break;case 6:throw t.prev=6,t.t0=t["catch"](1),new i.ValidationError(t.t0);case 9:case"end":return t.stop()}},t,null,[[1,6]])}));function e(e,n){return t.apply(this,arguments)}return e}()}}};e.default=d},"79c7":function(t,e,n){"use strict";n.r(e);var a=n("5a3b"),s=n("50c0");for(var r in s)"default"!==r&&function(t){n.d(e,t,function(){return s[t]})}(r);n("c8db");var o=n("2877"),i=Object(o["a"])(s["default"],a["a"],a["b"],!1,null,"713bebb0",null);e["default"]=i.exports},"7bbf":function(t,e,n){"use strict";n.r(e);var a=n("a6ec"),s=n.n(a);for(var r in a)"default"!==r&&function(t){n.d(e,t,function(){return a[t]})}(r);e["default"]=s.a},"83c1":function(t,e,n){"use strict";(function(){function e(t){return t[0]}var a=n("0f85"),s=a.states({main:{space:{match:/\s+/,lineBreaks:!0},comment:/\/\/.*$/,blockComment:{match:/\/\*[^]*?\*\//,lineBreaks:!0},messages:"messages",init:"init",bounce_fees:"bounce_fees",formulaDoubleStart:{match:'"{',push:"formulaDouble"},formulaSingleStart:{match:"'{",push:"formulaSingle"},formulaBackStart:{match:"`{",push:"formulaBack"},"{":"{","}":"}","[":"[","]":"]",":":":",",":",",autonomous_agent:"autonomous agent",ifWord:"if",null:"null",base:"base",cases:"cases",app:{match:"app:",push:"appList"},state:"state",payloadFormula:/payload:\s+(?![{\[])/,payload:{match:/payload:\s+{/,push:"payload"},payloadArray:{match:/payload:\s+\[/,push:"payload"},base64:[/'(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})'/,/"(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})"/,/`(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})`/],'"':'"',"'":"'","`":"`",int:/[0-9]+/},appList:{space:{match:/\s+/,lineBreaks:!0},comment:/\/\/.*$/,blockComment:{match:/\/\*[^]*?\*\//,lineBreaks:!0},'"':'"',"'":"'","`":"`",appList:{match:["payment","data","data_feed","profile","text","definition","asset_attestors","attestation","state","definition_template","poll","vote","asset"],pop:1}},payload:{space:{match:/\s+/,lineBreaks:!0},comment:/\/\/.*$/,blockComment:{match:/\/\*[^]*?\*\//,lineBreaks:!0},formulaDoubleStart:{match:'"{',push:"formulaDouble"},formulaSingleStart:{match:"'{",push:"formulaSingle"},formulaBackStart:{match:"`{",push:"formulaBack"},"{":{match:"{",push:"payload"},"}":{match:"}",pop:1},"[":"[","]":"]",":":":",",":",",true:"true",false:"false",base64:[/'(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})'/,/"(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})"/,/`(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})`/],'"':'"',"'":"'","`":"`",decimal:/(?:[+-])?(?:[0-9]*[.])?[0-9]+/,str:/[a-zA-Z_0-9 =+*\/@-]+/},formulaDouble:{formulaDoubleEnd:{match:'}"',pop:1},formula:{match:/[\s\S]+?(?=}")/,lineBreaks:!0}},formulaSingle:{formulaSingleEnd:{match:"}'",pop:1},formula:{match:/[\s\S]+?(?=}')/,lineBreaks:!0}},formulaBack:{formulaBackEnd:{match:"}`",pop:1},formula:{match:/[\s\S]+?(?=}`)/,lineBreaks:!0}}}),r={IF:"IF",INT:"INT",STR:"STR",APP:"APP",MAIN:"MAIN",INIT:"INIT",PAIR:"PAIR",TRUE:"TRUE",CASE:"CASE",CASES:"CASES",FALSE:"FALSE",STATE:"STATE",ARRAY:"ARRAY",OBJECT:"OBJECT",DECIMAL:"DECIMAL",FORMULA:"FORMULA",PAYLOAD:"PAYLOAD",MESSAGE:"MESSAGE",MESSAGES:"MESSAGES",BOUNCE_FEES:"BOUNCE_FEES",BOUNCE_ASSET:"BOUNCE_ASSET"},o=function(t){return{col:t.col,line:t.line,offset:t.offset,lineBreaks:t.lineBreaks}},i=function(t){return t[0].map(function(t){return t[0]})},l=function(t){return{type:r.MAIN,value:t[3],context:o(t[1])}},u=function(t){return{type:r.FORMULA,value:t[1]?t[1].text:"",context:t[1]?o(t[1]):o(t[0])}},c=function(t){return{type:r.INIT,value:t[3],context:o(t[0])}},d=function(t){return{type:r.BOUNCE_FEES,value:t[3],context:o(t[0])}},m=function(t){return t[2]},p=function(t){return{type:r.BOUNCE_ASSET,asset:t[0][0].text,value:t[3],context:o(t[0][0])}},f=function(t){return{type:r.MESSAGES,value:{type:r.ARRAY,value:t[5],context:o(t[3])},context:o(t[0])}},b=function(t){return{type:r.MESSAGES,value:t[5][0],context:o(t[0])}},g=function(t){return{type:r.CASES,value:t[5],context:o(t[3])}},h=function(t){return{type:r.CASE,value:t[2].map(function(t){return t[0]}),context:o(t[0])}},$=function(t){return{type:r.MESSAGE,value:t[2].map(function(t){return t[0]}),context:o(t[0])}},y=function(t){return{type:r.IF,value:t[3],context:o(t[0])}},v=function(t){return{type:r.STATE,value:t[3],context:o(t[0])}},_=function(t){return{type:r.APP,value:t[2],context:o(t[0])}},A=function(t){return{type:r.PAYLOAD,value:t[2],context:o(t[0])}},x=function(t){return{type:r.PAYLOAD,value:{type:r.OBJECT,value:t[2],context:o(t[0])},context:o(t[0])}},k=function(t){return{type:r.PAYLOAD,value:{type:r.ARRAY,value:t[2],context:o(t[0])},context:o(t[0])}},w=function(t){return{type:r.PAIR,key:t[0],value:t[3][0],context:o(t[1])}},E=function(t){return{type:r.OBJECT,value:t[2],context:o(t[0])}},T=function(t){return{type:r.ARRAY,value:t[2],context:o(t[0])}},C=function(t){return t[0].map(function(t){return t[0]})},I=function(t){return{type:r.INT,value:parseInt(t[0].text),context:o(t[0])}},O=function(t){return{type:r.DECIMAL,value:parseFloat(t[0].text),context:o(t[0])}},S=function(t){return[{type:r.STR,value:""+t[0].value,context:t[0].context}]},P=function(t){return{type:r.STR,value:t[0].text,context:o(t[0])}},R=function(t){return{type:r.STR,value:t[0].text.slice(1,-1),context:o(t[0])}},N=function(t){return{type:r.TRUE,value:!0,context:o(t[0])}},D=function(t){return{type:r.FALSE,value:!1,context:o(t[0])}},j=function(t){return t[0]},B=function(t){var e=t[1].map(function(t){return t[2][0]});return e.unshift(t[0][0]),e.map(function(t){return t[0]}),e},M=function(t){return t[1][0]},F={Lexer:s,ParserRules:[{name:"start",symbols:["main"],postprocess:function(t){return t[0]}},{name:"start",symbols:["mainWithAA"],postprocess:function(t){return t[0]}},{name:"mainWithAA$macrocall$2",symbols:[s.has("autonomous_agent")?{type:"autonomous_agent"}:autonomous_agent]},{name:"mainWithAA$macrocall$1",symbols:[{literal:"'"},"mainWithAA$macrocall$2",{literal:"'"}],postprocess:M},{name:"mainWithAA$macrocall$1",symbols:[{literal:"`"},"mainWithAA$macrocall$2",{literal:"`"}],postprocess:M},{name:"mainWithAA$macrocall$1",symbols:[{literal:'"'},"mainWithAA$macrocall$2",{literal:'"'}],postprocess:M},{name:"mainWithAA",symbols:["_",{literal:"["},"_","mainWithAA$macrocall$1",{literal:","},"main",{literal:"]"},"_"],postprocess:function(t){return t[5]}},{name:"main",symbols:["_",{literal:"{"},"_","mainBlock","_",{literal:"}"},"_"],postprocess:l},{name:"mainBlock$macrocall$2$subexpression$1",symbols:["init"]},{name:"mainBlock$macrocall$2$subexpression$1",symbols:["bounce_fees"]},{name:"mainBlock$macrocall$2$subexpression$1",symbols:["messages"]},{name:"mainBlock$macrocall$2",symbols:["mainBlock$macrocall$2$subexpression$1"]},{name:"mainBlock$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"mainBlock$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"mainBlock$macrocall$1",symbols:["mainBlock$macrocall$2","mainBlock$macrocall$1$ebnf$1"],postprocess:j},{name:"mainBlock$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","mainBlock$macrocall$2"]},{name:"mainBlock$macrocall$1$ebnf$2",symbols:["mainBlock$macrocall$1$ebnf$2$subexpression$1"]},{name:"mainBlock$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","mainBlock$macrocall$2"]},{name:"mainBlock$macrocall$1$ebnf$2",symbols:["mainBlock$macrocall$1$ebnf$2","mainBlock$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"mainBlock$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"mainBlock$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"mainBlock$macrocall$1",symbols:["mainBlock$macrocall$2","mainBlock$macrocall$1$ebnf$2","mainBlock$macrocall$1$ebnf$3"],postprocess:B},{name:"mainBlock",symbols:["mainBlock$macrocall$1"],postprocess:i},{name:"init",symbols:[s.has("init")?{type:"init"}:c,{literal:":"},"_","formula"],postprocess:c},{name:"bounce_fees",symbols:[s.has("bounce_fees")?{type:"bounce_fees"}:bounce_fees,{literal:":"},"_","bounce_asset"],postprocess:d},{name:"bounce_asset$macrocall$2",symbols:["assetPair"]},{name:"bounce_asset$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"bounce_asset$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"bounce_asset$macrocall$1",symbols:["bounce_asset$macrocall$2","bounce_asset$macrocall$1$ebnf$1"],postprocess:j},{name:"bounce_asset$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","bounce_asset$macrocall$2"]},{name:"bounce_asset$macrocall$1$ebnf$2",symbols:["bounce_asset$macrocall$1$ebnf$2$subexpression$1"]},{name:"bounce_asset$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","bounce_asset$macrocall$2"]},{name:"bounce_asset$macrocall$1$ebnf$2",symbols:["bounce_asset$macrocall$1$ebnf$2","bounce_asset$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"bounce_asset$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"bounce_asset$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"bounce_asset$macrocall$1",symbols:["bounce_asset$macrocall$2","bounce_asset$macrocall$1$ebnf$2","bounce_asset$macrocall$1$ebnf$3"],postprocess:B},{name:"bounce_asset",symbols:[{literal:"{"},"_","bounce_asset$macrocall$1","_",{literal:"}"}],postprocess:m},{name:"assetPair$subexpression$1",symbols:[s.has("base")?{type:"base"}:base]},{name:"assetPair$subexpression$1",symbols:[s.has("base64")?{type:"base64"}:base64]},{name:"assetPair",symbols:["assetPair$subexpression$1",{literal:":"},"_","int"],postprocess:p},{name:"messages$macrocall$2",symbols:["message"]},{name:"messages$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"messages$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"messages$macrocall$1",symbols:["messages$macrocall$2","messages$macrocall$1$ebnf$1"],postprocess:j},{name:"messages$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","messages$macrocall$2"]},{name:"messages$macrocall$1$ebnf$2",symbols:["messages$macrocall$1$ebnf$2$subexpression$1"]},{name:"messages$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","messages$macrocall$2"]},{name:"messages$macrocall$1$ebnf$2",symbols:["messages$macrocall$1$ebnf$2","messages$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"messages$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"messages$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"messages$macrocall$1",symbols:["messages$macrocall$2","messages$macrocall$1$ebnf$2","messages$macrocall$1$ebnf$3"],postprocess:B},{name:"messages",symbols:[s.has("messages")?{type:"messages"}:messages,{literal:":"},"_",{literal:"["},"_","messages$macrocall$1","_",{literal:"]"}],postprocess:f},{name:"messages$macrocall$4",symbols:["cases"]},{name:"messages$macrocall$3$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"messages$macrocall$3$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"messages$macrocall$3",symbols:["messages$macrocall$4","messages$macrocall$3$ebnf$1"],postprocess:j},{name:"messages$macrocall$3$ebnf$2$subexpression$1",symbols:[{literal:","},"_","messages$macrocall$4"]},{name:"messages$macrocall$3$ebnf$2",symbols:["messages$macrocall$3$ebnf$2$subexpression$1"]},{name:"messages$macrocall$3$ebnf$2$subexpression$2",symbols:[{literal:","},"_","messages$macrocall$4"]},{name:"messages$macrocall$3$ebnf$2",symbols:["messages$macrocall$3$ebnf$2","messages$macrocall$3$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"messages$macrocall$3$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"messages$macrocall$3$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"messages$macrocall$3",symbols:["messages$macrocall$4","messages$macrocall$3$ebnf$2","messages$macrocall$3$ebnf$3"],postprocess:B},{name:"messages",symbols:[s.has("messages")?{type:"messages"}:messages,{literal:":"},"_",{literal:"{"},"_","messages$macrocall$3","_",{literal:"}"}],postprocess:b},{name:"cases$macrocall$2",symbols:["case"]},{name:"cases$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"cases$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"cases$macrocall$1",symbols:["cases$macrocall$2","cases$macrocall$1$ebnf$1"],postprocess:j},{name:"cases$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","cases$macrocall$2"]},{name:"cases$macrocall$1$ebnf$2",symbols:["cases$macrocall$1$ebnf$2$subexpression$1"]},{name:"cases$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","cases$macrocall$2"]},{name:"cases$macrocall$1$ebnf$2",symbols:["cases$macrocall$1$ebnf$2","cases$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"cases$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"cases$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"cases$macrocall$1",symbols:["cases$macrocall$2","cases$macrocall$1$ebnf$2","cases$macrocall$1$ebnf$3"],postprocess:B},{name:"cases",symbols:[s.has("cases")?{type:"cases"}:g,{literal:":"},"_",{literal:"["},"_","cases$macrocall$1","_",{literal:"]"}],postprocess:g},{name:"case$macrocall$2$subexpression$1",symbols:["messages"]},{name:"case$macrocall$2$subexpression$1",symbols:["if"]},{name:"case$macrocall$2$subexpression$1",symbols:["init"]},{name:"case$macrocall$2",symbols:["case$macrocall$2$subexpression$1"]},{name:"case$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"case$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"case$macrocall$1",symbols:["case$macrocall$2","case$macrocall$1$ebnf$1"],postprocess:j},{name:"case$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","case$macrocall$2"]},{name:"case$macrocall$1$ebnf$2",symbols:["case$macrocall$1$ebnf$2$subexpression$1"]},{name:"case$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","case$macrocall$2"]},{name:"case$macrocall$1$ebnf$2",symbols:["case$macrocall$1$ebnf$2","case$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"case$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"case$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"case$macrocall$1",symbols:["case$macrocall$2","case$macrocall$1$ebnf$2","case$macrocall$1$ebnf$3"],postprocess:B},{name:"case",symbols:[{literal:"{"},"_","case$macrocall$1","_",{literal:"}"}],postprocess:h},{name:"message$macrocall$2$subexpression$1",symbols:["app"]},{name:"message$macrocall$2$subexpression$1",symbols:["payloadFormula"]},{name:"message$macrocall$2$subexpression$1",symbols:["payload"]},{name:"message$macrocall$2$subexpression$1",symbols:["if"]},{name:"message$macrocall$2$subexpression$1",symbols:["state"]},{name:"message$macrocall$2$subexpression$1",symbols:["payloadArray"]},{name:"message$macrocall$2$subexpression$1",symbols:["init"]},{name:"message$macrocall$2",symbols:["message$macrocall$2$subexpression$1"]},{name:"message$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"message$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"message$macrocall$1",symbols:["message$macrocall$2","message$macrocall$1$ebnf$1"],postprocess:j},{name:"message$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","message$macrocall$2"]},{name:"message$macrocall$1$ebnf$2",symbols:["message$macrocall$1$ebnf$2$subexpression$1"]},{name:"message$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","message$macrocall$2"]},{name:"message$macrocall$1$ebnf$2",symbols:["message$macrocall$1$ebnf$2","message$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"message$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"message$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"message$macrocall$1",symbols:["message$macrocall$2","message$macrocall$1$ebnf$2","message$macrocall$1$ebnf$3"],postprocess:B},{name:"message",symbols:[{literal:"{"},"_","message$macrocall$1","_",{literal:"}"}],postprocess:$},{name:"if",symbols:[s.has("ifWord")?{type:"ifWord"}:y,{literal:":"},"_","formula"],postprocess:y},{name:"app$macrocall$2",symbols:["appList"]},{name:"app$macrocall$1",symbols:[{literal:"'"},"app$macrocall$2",{literal:"'"}],postprocess:M},{name:"app$macrocall$1",symbols:[{literal:"`"},"app$macrocall$2",{literal:"`"}],postprocess:M},{name:"app$macrocall$1",symbols:[{literal:'"'},"app$macrocall$2",{literal:'"'}],postprocess:M},{name:"app",symbols:[s.has("app")?{type:"app"}:_,"_","app$macrocall$1"],postprocess:_},{name:"appList",symbols:[s.has("appList")?{type:"appList"}:appList],postprocess:function(t){return t[0].text}},{name:"state",symbols:[s.has("state")?{type:"state"}:v,{literal:":"},"_","formula"],postprocess:v},{name:"payload$macrocall$2",symbols:["pair"]},{name:"payload$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"payload$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"payload$macrocall$1",symbols:["payload$macrocall$2","payload$macrocall$1$ebnf$1"],postprocess:j},{name:"payload$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","payload$macrocall$2"]},{name:"payload$macrocall$1$ebnf$2",symbols:["payload$macrocall$1$ebnf$2$subexpression$1"]},{name:"payload$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","payload$macrocall$2"]},{name:"payload$macrocall$1$ebnf$2",symbols:["payload$macrocall$1$ebnf$2","payload$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"payload$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"payload$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"payload$macrocall$1",symbols:["payload$macrocall$2","payload$macrocall$1$ebnf$2","payload$macrocall$1$ebnf$3"],postprocess:B},{name:"payload",symbols:[s.has("payload")?{type:"payload"}:x,"_","payload$macrocall$1","_",{literal:"}"}],postprocess:x},{name:"payloadArray",symbols:[s.has("payloadArray")?{type:"payloadArray"}:k,"_","arrayContent","_",{literal:"]"}],postprocess:k},{name:"payloadFormula",symbols:[s.has("payloadFormula")?{type:"payloadFormula"}:A,"_","formula"],postprocess:A},{name:"object$macrocall$2",symbols:["pair"]},{name:"object$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"object$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"object$macrocall$1",symbols:["object$macrocall$2","object$macrocall$1$ebnf$1"],postprocess:j},{name:"object$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","object$macrocall$2"]},{name:"object$macrocall$1$ebnf$2",symbols:["object$macrocall$1$ebnf$2$subexpression$1"]},{name:"object$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","object$macrocall$2"]},{name:"object$macrocall$1$ebnf$2",symbols:["object$macrocall$1$ebnf$2","object$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"object$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"object$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"object$macrocall$1",symbols:["object$macrocall$2","object$macrocall$1$ebnf$2","object$macrocall$1$ebnf$3"],postprocess:B},{name:"object",symbols:[{literal:"{"},"_","object$macrocall$1","_",{literal:"}"}],postprocess:E},{name:"pair",symbols:["key",{literal:":"},"_","value"],postprocess:w},{name:"key",symbols:["str"],postprocess:function(t){return t[0]}},{name:"key$macrocall$2",symbols:["str"]},{name:"key$macrocall$1",symbols:[{literal:"'"},"key$macrocall$2",{literal:"'"}],postprocess:M},{name:"key$macrocall$1",symbols:[{literal:"`"},"key$macrocall$2",{literal:"`"}],postprocess:M},{name:"key$macrocall$1",symbols:[{literal:'"'},"key$macrocall$2",{literal:'"'}],postprocess:M},{name:"key",symbols:["key$macrocall$1"],postprocess:function(t){return t[0]}},{name:"key",symbols:["formula"],postprocess:function(t){return t[0]}},{name:"key",symbols:["base64"],postprocess:function(t){return t[0]}},{name:"value",symbols:["formula"]},{name:"value",symbols:["true"]},{name:"value",symbols:["false"]},{name:"value",symbols:["array"]},{name:"value",symbols:["object"]},{name:"value$macrocall$2",symbols:["str"]},{name:"value$macrocall$1",symbols:[{literal:"'"},"value$macrocall$2",{literal:"'"}],postprocess:M},{name:"value$macrocall$1",symbols:[{literal:"`"},"value$macrocall$2",{literal:"`"}],postprocess:M},{name:"value$macrocall$1",symbols:[{literal:'"'},"value$macrocall$2",{literal:'"'}],postprocess:M},{name:"value",symbols:["value$macrocall$1"]},{name:"value",symbols:["base64"]},{name:"value",symbols:["decimal"]},{name:"value$macrocall$4",symbols:["decimal"]},{name:"value$macrocall$3",symbols:[{literal:"'"},"value$macrocall$4",{literal:"'"}],postprocess:M},{name:"value$macrocall$3",symbols:[{literal:"`"},"value$macrocall$4",{literal:"`"}],postprocess:M},{name:"value$macrocall$3",symbols:[{literal:'"'},"value$macrocall$4",{literal:'"'}],postprocess:M},{name:"value",symbols:["value$macrocall$3"],postprocess:S},{name:"array",symbols:[{literal:"["},"_","arrayContent","_",{literal:"]"}],postprocess:T},{name:"arrayContent$macrocall$2$subexpression$1",symbols:["object"]},{name:"arrayContent$macrocall$2$subexpression$1",symbols:["formula"]},{name:"arrayContent$macrocall$2$subexpression$1$macrocall$2",symbols:["str"]},{name:"arrayContent$macrocall$2$subexpression$1$macrocall$1",symbols:[{literal:"'"},"arrayContent$macrocall$2$subexpression$1$macrocall$2",{literal:"'"}],postprocess:M},{name:"arrayContent$macrocall$2$subexpression$1$macrocall$1",symbols:[{literal:"`"},"arrayContent$macrocall$2$subexpression$1$macrocall$2",{literal:"`"}],postprocess:M},{name:"arrayContent$macrocall$2$subexpression$1$macrocall$1",symbols:[{literal:'"'},"arrayContent$macrocall$2$subexpression$1$macrocall$2",{literal:'"'}],postprocess:M},{name:"arrayContent$macrocall$2$subexpression$1",symbols:["arrayContent$macrocall$2$subexpression$1$macrocall$1"]},{name:"arrayContent$macrocall$2$subexpression$1",symbols:["base64"]},{name:"arrayContent$macrocall$2$subexpression$1",symbols:["array"]},{name:"arrayContent$macrocall$2",symbols:["arrayContent$macrocall$2$subexpression$1"]},{name:"arrayContent$macrocall$1$ebnf$1",symbols:[{literal:","}],postprocess:e},{name:"arrayContent$macrocall$1$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"arrayContent$macrocall$1",symbols:["arrayContent$macrocall$2","arrayContent$macrocall$1$ebnf$1"],postprocess:j},{name:"arrayContent$macrocall$1$ebnf$2$subexpression$1",symbols:[{literal:","},"_","arrayContent$macrocall$2"]},{name:"arrayContent$macrocall$1$ebnf$2",symbols:["arrayContent$macrocall$1$ebnf$2$subexpression$1"]},{name:"arrayContent$macrocall$1$ebnf$2$subexpression$2",symbols:[{literal:","},"_","arrayContent$macrocall$2"]},{name:"arrayContent$macrocall$1$ebnf$2",symbols:["arrayContent$macrocall$1$ebnf$2","arrayContent$macrocall$1$ebnf$2$subexpression$2"],postprocess:function(t){return t[0].concat([t[1]])}},{name:"arrayContent$macrocall$1$ebnf$3",symbols:[{literal:","}],postprocess:e},{name:"arrayContent$macrocall$1$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"arrayContent$macrocall$1",symbols:["arrayContent$macrocall$2","arrayContent$macrocall$1$ebnf$2","arrayContent$macrocall$1$ebnf$3"],postprocess:B},{name:"arrayContent",symbols:["arrayContent$macrocall$1"],postprocess:C},{name:"formula$ebnf$1",symbols:[s.has("formula")?{type:"formula"}:u],postprocess:e},{name:"formula$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"formula",symbols:[s.has("formulaDoubleStart")?{type:"formulaDoubleStart"}:formulaDoubleStart,"formula$ebnf$1",s.has("formulaDoubleEnd")?{type:"formulaDoubleEnd"}:formulaDoubleEnd],postprocess:u},{name:"formula$ebnf$2",symbols:[s.has("formula")?{type:"formula"}:u],postprocess:e},{name:"formula$ebnf$2",symbols:[],postprocess:function(t){return null}},{name:"formula",symbols:[s.has("formulaSingleStart")?{type:"formulaSingleStart"}:formulaSingleStart,"formula$ebnf$2",s.has("formulaSingleEnd")?{type:"formulaSingleEnd"}:formulaSingleEnd],postprocess:u},{name:"formula$ebnf$3",symbols:[s.has("formula")?{type:"formula"}:u],postprocess:e},{name:"formula$ebnf$3",symbols:[],postprocess:function(t){return null}},{name:"formula",symbols:[s.has("formulaBackStart")?{type:"formulaBackStart"}:formulaBackStart,"formula$ebnf$3",s.has("formulaBackEnd")?{type:"formulaBackEnd"}:formulaBackEnd],postprocess:u},{name:"_",symbols:[]},{name:"_$ebnf$1$subexpression$1",symbols:[s.has("comment")?{type:"comment"}:comment,"_"]},{name:"_$ebnf$1",symbols:["_$ebnf$1$subexpression$1"],postprocess:e},{name:"_$ebnf$1",symbols:[],postprocess:function(t){return null}},{name:"_",symbols:[s.has("space")?{type:"space"}:space,"_$ebnf$1"],postprocess:function(t){return null}},{name:"_",symbols:[s.has("comment")?{type:"comment"}:comment,"_"],postprocess:function(t){return null}},{name:"_",symbols:["_",s.has("blockComment")?{type:"blockComment"}:blockComment,"_"],postprocess:function(t){return null}},{name:"int",symbols:[s.has("int")?{type:"int"}:I],postprocess:I},{name:"str",symbols:[s.has("str")?{type:"str"}:P],postprocess:P},{name:"true",symbols:[!s.has("true")||{type:"true"}],postprocess:N},{name:"base64",symbols:[s.has("base64")?{type:"base64"}:base64],postprocess:R},{name:"false",symbols:[!!s.has("false")&&{type:"false"}],postprocess:D},{name:"decimal",symbols:[s.has("decimal")?{type:"decimal"}:O],postprocess:O}],ParserStart:"start"};"undefined"!==typeof t.exports?t.exports=F:window.grammar=F})()},"8b5d":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tbounce_fees: { base: 10000 },\n\tmessages: [\n\t\t{\n\t\t\tapp: 'payment',\n\t\t\tpayload: {\n\t\t\t\tasset: 'base',\n\t\t\t\toutputs: [\n\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ round(balance[base]/2) }\"}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}";e.default=a},"8ebb":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a='{\n\tmessages: [\n\t\t{\n\t\t\tif: `{trigger.output[[asset=base]] > 2000}`,\n\t\t\tapp: \'payment\',\n\t\t\tpayload: {\n\t\t\t\tasset: "base",\n\t\t\t\toutputs: [\n\t\t\t\t\t{ address: "PCEJIRXNA56T6VQOOSPV6GOJVLVN6AO6", amount: "{ trigger.output[[asset=base]] - 2000 }" }\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t]\n}';e.default=a},"9bad":function(t,e,n){},a344:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tinit: `{\n\t\t$my_address = '2QHG44PZLJWD2H7C5ZIWH4NZZVB6QCC7';\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // withdraw funds\n\t\t\t\tif: \"{trigger.data.withdraw AND trigger.data.asset AND trigger.data.amount AND trigger.address == $my_address}\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: \"{trigger.data.asset}\",\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{trigger.data.amount}\"}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{ // update exchange rate\n\t\t\t\tif: \"{trigger.data.exchange_rate AND trigger.address == $my_address}\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: \"{ var['rate'] = trigger.data.exchange_rate; response['message'] = 'set exchange rate to '||var['rate']||' tokens/byte'; }\"  // asset-units/byte\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{ // exchange\n\t\t\t\tif: \"{trigger.output[[asset=base]] > 100000}\",\n\t\t\t\tinit: \"{ $bytes_amount = trigger.output[[asset=base]]; $asset_amount = round($bytes_amount * var['rate']); response['message'] = 'exchanged '||$bytes_amount||' bytes for '||$asset_amount||' asset.'; }\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: \"n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY=\",\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ $asset_amount }\"}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{ // silently accept coins\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: \"{ response['message'] = 'accepted coins: '||trigger.output[[asset=base]]||' bytes and '||trigger.output[[asset='n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY=']]||' tokens.'; }\"\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},a494:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // define YES and NO assets\n\t\t\t\tif: `{\n\t\t\t\t\t$define_yes = trigger.data.define_yes AND !var['yes_asset'];\n\t\t\t\t\t$define_no = trigger.data.define_no AND !var['no_asset'];\n\t\t\t\t\tif ($define_yes AND $define_no)\n\t\t\t\t\t\tbounce(\"can't define both assets at the same time\");\n\t\t\t\t\t$define_yes OR $define_no\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t// without cap\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\t$asset = $define_yes ? 'yes_asset' : 'no_asset';\n\t\t\t\t\t\t\tvar[$asset] = response_unit;\n\t\t\t\t\t\t\tresponse[$asset] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // issue YES and NO assets in exchange for bytes\n\t\t\t\tif: \"{trigger.output[[asset=base]] >= 1e5 AND var['yes_asset'] AND var['no_asset']}\",\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{var['yes_asset']}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ trigger.output[[asset=base]] }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{var['no_asset']}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ trigger.output[[asset=base]] }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // record the outcome\n\t\t\t\tif: `{(trigger.data.winner == 'yes' OR trigger.data.winner == 'no') AND !var['winner']}`,\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: `{\n\t\t\t\t\t\tif (trigger.data.winner == 'yes' AND data_feed[[oracles='X55IWSNMHNDUIYKICDW3EOYAWHRUKANP', feed_name='GBYTE_USD']] > 60)\n\t\t\t\t\t\t\tvar['winner'] = 'yes';\n\t\t\t\t\t\telse if (trigger.data.winner == 'no' AND timestamp > 1556668800)\n\t\t\t\t\t\t\tvar['winner'] = 'no';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbounce('suggested outcome not confirmed');\n\t\t\t\t\t\tresponse['winner'] = trigger.data.winner;\n\t\t\t\t\t}`\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{ // pay bytes in exchange for the winning asset\n\t\t\t\tif: \"{trigger.output[[asset!=base]] > 1000 AND var['winner'] AND trigger.output[[asset!=base]].asset == var[var['winner'] || '_asset']}\",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ trigger.output[[asset!=base]] }\"}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},a676:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a='{\n\tbounce_fees: { base: 11000 },\n\tmessages: {\n\t\tcases: [\n\t\t\t{\n\t\t\t\tif: "{trigger.data.define}",\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: \'asset\',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tcap: "{trigger.data.cap otherwise \'\'}",\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: "{!!trigger.data.auto_destroy}",\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: "{!!trigger.data.issued_by_definer_only}",\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: "{!!trigger.data.attestor1}",\n\t\t\t\t\t\t\tattestors: [\n\t\t\t\t\t\t\t\t"{trigger.data.attestor1 otherwise \'\'}",\n\t\t\t\t\t\t\t\t"{trigger.data.attestor2 otherwise \'\'}",\n\t\t\t\t\t\t\t\t"{trigger.data.attestor3 otherwise \'\'}",\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: \'state\',\n\t\t\t\t\t\tstate: "{ var[response_unit] = trigger.address; }"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tif: "{trigger.data.issue AND trigger.data.asset AND var[trigger.data.asset] == trigger.address}",\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: \'payment\',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: "{trigger.data.asset}",\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{address: "{trigger.address}", amount: "{trigger.data.amount}"}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}';e.default=a},a6ec:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n("96cf");var s=a(n("3b8d")),r={props:{selectedLabel:String,isSelectedAgentUser:Boolean},data:function(){return{renameInput:"",isRenamingActive:!1,isDeletingActive:!1}},methods:{handleActionNew:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.$emit("new");case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionShare:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.$emit("share");case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionDelete:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.isDeletingActive=!0;case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionDeleteConfirm:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.$emit("delete"),this.isDeletingActive=!1;case 2:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionDeleteCancel:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.isDeletingActive=!1;case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionRename:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){var e=this;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.renameInput=this.selectedLabel,this.isRenamingActive=!0,setTimeout(function(){e.$refs.renameInputEl.focus(),e.$refs.renameInputEl.setSelectionRange(0,e.renameInput.length)},10);case 3:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionRenameDone:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.$emit("rename",this.renameInput),this.isRenamingActive=!1;case 2:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleActionRenameCancel:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.isRenamingActive=!1;case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleMouseleave:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:this.isDeletingActive=!1;case 1:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}()}};e.default=r},a77b:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n("8e6e"),n("8615"),n("ac6a"),n("456d"),n("c5f6"),n("4917"),n("7514"),n("96cf");var s=a(n("3b8d")),r=a(n("bd86")),o=a(n("059c")),i=a(n("6747")),l=a(n("b047c")),u=a(n("9b02")),c=n("2f62"),d=a(n("1881")),m=n("2af9"),p=n("cb85"),f=a(n("bc3a"));function b(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,a)}return n}function g(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?b(n,!0).forEach(function(e){(0,r.default)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):b(n).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}var h={IF:"IF",INT:"INT",STR:"STR",APP:"APP",MAIN:"MAIN",INIT:"INIT",PAIR:"PAIR",TRUE:"TRUE",CASE:"CASE",CASES:"CASES",FALSE:"FALSE",STATE:"STATE",ARRAY:"ARRAY",OBJECT:"OBJECT",DECIMAL:"DECIMAL",FORMULA:"FORMULA",PAYLOAD:"PAYLOAD",MESSAGE:"MESSAGE",MESSAGES:"MESSAGES",BOUNCE_FEES:"BOUNCE_FEES",BOUNCE_ASSET:"BOUNCE_ASSET"},$={api:{url:"https://oscript.org/api/v1/"},mode:"production",explorer:{url:"https://explorer.obyte.org/"}},y=$.explorer.url,v=d.default["ojson"],_={components:{MonacoEditor:o.default,AgentControls:m.AgentControls},data:function(){return{serializedOjson:"",language:v.id,code:"",template:"",doNotUpdateAgentText:!0,resultMessage:"",resultPaneOpened:!1,resultPaneEditorOptions:{lineNumbers:"off",readOnly:!0,scrollBeyondLastLine:!1,automaticLayout:!0,minimap:{enabled:!1}},resultPaneModelOptions:{tabSize:1},editorOptions:{wordWrap:"on",wrappingIndent:"same",scrollBeyondLastLine:!1,automaticLayout:!0}}},watch:{code:function(){this.doNotUpdateAgentText?this.doNotUpdateAgentText=!1:this.updateAgentText(this.code),this.debouncedCodeChanged()}},created:function(){var t=this;this.debouncedCodeChanged=(0,l.default)(this.codeChanged,500,{trailing:!0}),this.code=this.selectedAgent.text||"",this.$route.params.id&&(0,f.default)({method:"get",url:"https://api.myjson.com/bins/"+this.$route.params.id,responseType:"stream"}).then(function(e){e&&t.handleAgentActionSharedNew(e),t.$router.push({path:"/"})})},mounted:function(){this.switchEditorWrapLines(this.wrapLines)},computed:g({},(0,c.mapState)({theme:function(t){return t.ui.settings.theme},wrapLines:function(t){return t.ui.settings.wrapLines},templates:function(t){return t.agents.templates},userAgents:function(t){return t.agents.userAgents}}),{},(0,c.mapGetters)({selectedAgent:"agents/selectedAgent",isSelectedAgentUser:"agents/isSelectedAgentUser",isSelectedAgentTemplate:"agents/isSelectedAgentTemplate"}),{badge:function(){switch($.mode){case"development":return"develop";case"testnet":return"testnet";default:return""}}}),methods:g({},(0,c.mapActions)({parseOscript:"grammars/parseOscript",parseOjson:"grammars/parseOjson",validateAa:"grammars/validateOjson",deployAa:"backend/deploy",changeSelectedAgent:"agents/changeSelected",createNewAgent:"agents/createNewAgent",shareThisAgent:"agents/shareThisAgent",createNewAgentShared:"agents/createNewAgentShared",deleteUserAgent:"agents/deleteAgent",renameUserAgent:"agents/renameAgent",updateAgentText:"agents/updateText",setWrapLines:"ui/setWrapLines",setTheme:"ui/setTheme"}),{codeChanged:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){var e;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:if(this.serializedOjson="",this.resultMessage="",""===this.code){t.next=17;break}return t.prev=3,t.next=6,this.parseOjson(this.code);case 6:return e=t.sent,t.next=9,this.serializeOjson(e);case 9:this.serializedOjson=t.sent,this.$router.push({path:"/"}),t.next=17;break;case 13:t.prev=13,t.t0=t["catch"](3),this.openResultPane(),this.resultMessage=t.t0.message;case 17:case"end":return t.stop()}},t,this,[[3,13]])}));function e(){return t.apply(this,arguments)}return e}(),deploy:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){var e,n,a;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return this.resultMessage="",t.next=3,this.codeChanged();case 3:if(""===this.serializedOjson){t.next=17;break}return this.openResultPane(),t.prev=5,t.next=8,this.deployAa(this.serializedOjson);case 8:e=t.sent,n=(0,u.default)(e,"result.unit",null),a=(0,u.default)(n,"messages",[]).find(function(t){return"definition"===t.app}),this.resultMessage="Success\n"+(n?"Check in explorer: ".concat(y,"#").concat(n.unit,"\n"):"")+(a?"Agent address: ".concat(a.payload.address):""),t.next=17;break;case 14:t.prev=14,t.t0=t["catch"](5),this.resultMessage=t.t0.response?(0,u.default)(t.t0,"response.data.error","Unexpected error"):t.t0.message;case 17:case"end":return t.stop()}},t,this,[[5,14]])}));function e(){return t.apply(this,arguments)}return e}(),validate:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return this.resultMessage="",t.next=3,this.codeChanged();case 3:if(""===this.serializedOjson){t.next=16;break}return this.openResultPane(),t.prev=5,t.next=8,this.validateAa(this.serializedOjson);case 8:this.resultMessage="Success",t.next=16;break;case 11:t.prev=11,t.t0=t["catch"](5),t.t0 instanceof p.ValidationError&&(this.resultMessage=t.t0.message),t.t0 instanceof p.ParsingError&&(this.resultMessage=t.t0.message),this.resultMessage=t.t0.message;case 16:case"end":return t.stop()}},t,this,[[5,11]])}));function e(){return t.apply(this,arguments)}return e}(),serializeOjson:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:if((0,i.default)(e)){t.next=2;break}throw new Error("parserResult should be Array");case 2:if(1===e.length){t.next=4;break}throw new Error("parserResult should be Array of length 1");case 4:return t.t0=JSON,t.next=7,this.processTree(e[0]);case 7:return t.t1=t.sent,t.t2=["autonomous agent",t.t1],t.abrupt("return",t.t0.stringify.call(t.t0,t.t2));case 10:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),processTree:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){var n,a,s,o,i,l;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:if(e.type!==h.MAIN){t.next=4;break}return t.abrupt("return",this.processAsObject(e));case 4:if(e.type!==h.MESSAGES){t.next=11;break}return t.next=7,this.processTree(e.value);case 7:return t.t0=t.sent,t.abrupt("return",{messages:t.t0});case 11:if(e.type!==h.ARRAY){t.next=15;break}return t.abrupt("return",this.processAsArray(e));case 15:if(e.type!==h.CASES){t.next=22;break}return t.next=18,this.processAsArray(e);case 18:return t.t1=t.sent,t.abrupt("return",{cases:t.t1});case 22:if(e.type!==h.CASE){t.next=26;break}return t.abrupt("return",this.processAsObject(e));case 26:if(e.type!==h.BOUNCE_FEES){t.next=42;break}n={},a=0;case 29:if(!(a<e.value.length)){t.next=39;break}if(s=e.value[a],!n.hasOwnProperty(s.asset)){t.next=33;break}throw new Error("Duplicate asset '".concat(s.asset,"' at line ").concat(s.context.line," col ").concat(s.context.col));case 33:return t.next=35,this.processTree(s.value);case 35:n[s.asset]=t.sent;case 36:a++,t.next=29;break;case 39:return t.abrupt("return",{bounce_fees:n});case 42:if(e.type!==h.INT){t.next=46;break}return t.abrupt("return",e.value);case 46:if(e.type!==h.STR){t.next=50;break}return t.abrupt("return",e.value);case 50:if(e.type!==h.TRUE){t.next=54;break}return t.abrupt("return",e.value);case 54:if(e.type!==h.FALSE){t.next=58;break}return t.abrupt("return",e.value);case 58:if(e.type!==h.DECIMAL){t.next=62;break}return t.abrupt("return",e.value);case 62:if(e.type!==h.FORMULA){t.next=81;break}return o=e.value,t.prev=64,t.next=67,this.parseOscript(o);case 67:return t.abrupt("return","{"+o+"}");case 70:if(t.prev=70,t.t2=t["catch"](64),i=t.t2.message,l=i.match(/invalid syntax at line ([\d]+) col ([\d]+):([\s\S]+)/m),!l){t.next=78;break}throw new Error("Invalid formula syntax at line ".concat(e.context.line+Number(l[1])-1," col ").concat(e.context.col+Number(l[2])-1,":").concat(l[3]));case 78:throw new Error("Invalid formula starting at line ".concat(e.context.line," col ").concat(e.context.col));case 79:t.next=134;break;case 81:if(e.type!==h.INIT){t.next=88;break}return t.next=84,this.processTree(e.value);case 84:return t.t3=t.sent,t.abrupt("return",{init:t.t3});case 88:if(e.type!==h.MESSAGE){t.next=92;break}return t.abrupt("return",this.processAsObject(e));case 92:if(e.type!==h.PAYLOAD){t.next=99;break}return t.next=95,this.processTree(e.value);case 95:return t.t4=t.sent,t.abrupt("return",{payload:t.t4});case 99:if(e.type!==h.OBJECT){t.next=103;break}return t.abrupt("return",this.processAsObject(e));case 103:if(e.type!==h.IF){t.next=110;break}return t.next=106,this.processTree(e.value);case 106:return t.t5=t.sent,t.abrupt("return",{if:t.t5});case 110:if(e.type!==h.STATE){t.next=117;break}return t.next=113,this.processTree(e.value);case 113:return t.t6=t.sent,t.abrupt("return",{state:t.t6});case 117:if(e.type!==h.APP){t.next=121;break}return t.abrupt("return",{app:e.value});case 121:if(e.type!==h.PAIR){t.next=133;break}return t.t7=r.default,t.t8={},t.next=126,this.processTree(e.key);case 126:return t.t9=t.sent,t.next=129,this.processTree(e.value);case 129:return t.t10=t.sent,t.abrupt("return",(0,t.t7)(t.t8,t.t9,t.t10));case 133:throw new Error("Unknown type ".concat(e.type));case 134:case"end":return t.stop()}},t,this,[[64,70]])}));function e(e){return t.apply(this,arguments)}return e}(),processAsObject:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){var n,a,s,r,o,i;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:n={},a=0;case 2:if(!(a<e.value.length)){t.next=15;break}return s=e.value[a],t.next=6,this.processTree(s);case 6:if(r=t.sent,o=Object.keys(r)[0],i=Object.values(r)[0],!n.hasOwnProperty(o)){t.next=11;break}throw new Error("Duplicate key '".concat(o,"' at line ").concat(s.context.line," col ").concat(s.context.col));case 11:n[o]=i;case 12:a++,t.next=2;break;case 15:return t.abrupt("return",n);case 16:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),processAsArray:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){var n,a,s,r;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:n=[],a=0;case 2:if(!(a<e.value.length)){t.next=11;break}return s=e.value[a],t.next=6,this.processTree(s);case 6:r=t.sent,n.push(r);case 8:a++,t.next=2;break;case 11:return t.abrupt("return",n);case 12:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),handleTemplateSelect:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){var n;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return n=e.target.value,t.next=3,this.changeSelectedAgent(n);case 3:this.doNotUpdateAgentText=!0,this.code=this.selectedAgent.text,this.$refs.editor.getMonaco().setScrollPosition({scrollTop:0}),this.resultMessage="";case 7:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),handleWrapLinesCheckbox:function(){var t=!this.wrapLines;this.switchEditorWrapLines(t),this.setWrapLines(t)},switchEditorWrapLines:function(t){t?this.$refs.editor.getMonaco().updateOptions({wordWrap:"on"}):this.$refs.editor.getMonaco().updateOptions({wordWrap:"off"})},handleThemeSelect:function(t){var e=t.target.value;this.setTheme(e)},handleAgentActionNew:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,this.createNewAgent("New Agent");case 2:this.doNotUpdateAgentText=!0,this.code=this.templates[0].text;case 4:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleAgentActionSharedNew:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,this.createNewAgentShared(e);case 2:this.code=e.data.id.text;case 3:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),handleAgentActionShare:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,this.shareThisAgent(this.selectedAgent.id);case 2:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleAgentActionDelete:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,this.deleteUserAgent(this.selectedAgent.id);case 2:this.doNotUpdateAgentText=!0,this.code=this.selectedAgent.text;case 4:case"end":return t.stop()}},t,this)}));function e(){return t.apply(this,arguments)}return e}(),handleAgentActionRename:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,this.renameUserAgent({id:this.selectedAgent.id,newLabel:e});case 2:case"end":return t.stop()}},t,this)}));function e(e){return t.apply(this,arguments)}return e}(),openResultPane:function(){var t=this;this.resultPaneOpened||(this.resultPaneOpened=!0,this.$nextTick(function(){t.$refs.resultPaneEditor.getMonaco().getModel().updateOptions(t.resultPaneModelOptions)}))}})};e.default=_},acd0:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: [\n\t\t{\n\t\t\tif: `{trigger.data.d}`,\n\t\t\tapp: 'data',\n\t\t\tpayload: `{trigger.data.d}`\n\t\t},\n\t\t{\n\t\t\tif: `{trigger.data.sub}`,\n\t\t\tapp: 'data',\n\t\t\tpayload: {\n\t\t\t\txx: 66.3,\n\t\t\t\tsub: `{trigger.data.sub}`\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tif: `{trigger.data.output}`,\n\t\t\tapp: 'payment',\n\t\t\tpayload: {\n\t\t\t\tasset: \"base\",\n\t\t\t\toutputs: [\n\t\t\t\t\t`{trigger.data.output}`\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tif: `{trigger.data.payment}`,\n\t\t\tapp: 'payment',\n\t\t\tpayload: `{trigger.data.payment}`\n\t\t},\n\t]\n}";e.default=a},bbb9:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("d225")),r=a(n("308d")),o=a(n("6bb5")),i=a(n("013f")),l=a(n("4e2b")),u=a(n("f28b")),c=function(t){function e(t){var n;return(0,s.default)(this,e),n=(0,r.default)(this,(0,o.default)(e).call(this,t)),Error.captureStackTrace((0,i.default)(n),n.constructor),n}return(0,l.default)(e,t),e}((0,u.default)(Error));e.default=c},c143:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("d225")),r=a(n("308d")),o=a(n("6bb5")),i=a(n("013f")),l=a(n("4e2b")),u=a(n("f28b")),c=function(t){function e(t,n,a){var l;return(0,s.default)(this,e),l=(0,r.default)(this,(0,o.default)(e).call(this,t)),l.line=n,l.column=a,Error.captureStackTrace((0,i.default)(l),l.constructor),l}return(0,l.default)(e,t),e}((0,u.default)(Error));e.default=c},c427:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\t/*\n\tThis is a fundraising proxy AA.\n\n\tIt allows to raise money up to a specific target.  If the target is reached, the money is forwarded to another AA, otherwise the money is refunded.\n\n\tThis specific example raises money for challenging the current candidate winner in 51% attack game.  The target is a moving target as other teams may be adding contributions at the same time.\n\n\tContributors get shares of the proxy in exchange for Bytes.  They can exchange the shares back to the same amount of Bytes any time before the target is reached.  As soon as the target is reached, the raised funds are forwarded to the game and the proxy receives the shares of the team in exchange.  Then, the contributors can exchange the shares of the proxy for the shares of the team.\n\t*/\n\n\tinit: `{\n\t\t$asset = var['asset'];\n\t\t$destination_aa = 'WWHEN5NDHBI2UF4CLJ7LQ7VAW2QELMD7';\n\t\t$team = 'VF5UVKDSOXPMITMDGYXEIGUJSQBRAMMN';\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // start a new fundraising period\n\t\t\t\tif: `{trigger.data.start AND !$asset}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar[response_unit || '_status'] = 'open';\n\t\t\t\t\t\t\tvar['asset'] = response_unit;\n\t\t\t\t\t\t\tresponse['asset'] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // contribute\n\t\t\t\tif: `{trigger.output[[asset=base]] >= 1e5 AND $asset}`,\n\t\t\t\tinit: `{\n\t\t\t\t\tif (var[$destination_aa]['finished'])\n\t\t\t\t\t\tbounce('game over');\n\t\t\t\t\t$amount = trigger.output[[asset=base]] - 2000; // to account for fees we need to respond now and to refund bytes or pay shares later\n\t\t\t\t\t$total_raised = var['total_raised'] + $amount;\n\t\t\t\t\t$missing_amount = ceil((balance[$destination_aa][base] + $total_raised)*0.51) - var[$destination_aa]['team_' || $team || '_amount'];\n\t\t\t\t\t$bDone = ($total_raised > $missing_amount);\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{$asset}\",\n\t\t\t\t\t\t\toutputs: [{address: \"{trigger.address}\", amount: \"{$amount}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tif: `{$bDone}`,\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [{address: \"{$destination_aa}\", amount: \"{$total_raised}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tif: `{$bDone}`,\n\t\t\t\t\t\tapp: 'data',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tteam: \"{$team}\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tif ($bDone)\n\t\t\t\t\t\t\t\tvar[$asset || '_status'] = 'raised';\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tvar['total_raised'] = $total_raised;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // received team asset\n\t\t\t\tif: `{trigger.output[[asset=var[$destination_aa]['team_' || $team || '_asset']]] AND $asset}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar[$asset || '_status'] = 'done';\n\t\t\t\t\t\t\tvar['asset'] = false;\n\t\t\t\t\t\t\tvar['total_raised'] = false;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // refund\n\t\t\t\tif: `{$asset AND trigger.output[[asset=$asset]] > 0}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$amount = trigger.output[[asset=$asset]];\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [{address: \"{trigger.address}\", amount: \"{$amount}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['total_raised'] -= $amount;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // pay the obtained team asset in exchange for the issued asset\n\t\t\t\tif: `{\n\t\t\t\t\t$in_asset = trigger.output[[asset!=base]].asset;\n\t\t\t\t\tvar[$in_asset || '_status'] == 'done'\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{var[$destination_aa]['team_' || $team || '_asset']}\",\n\t\t\t\t\t\t\toutputs: [{address: \"{trigger.address}\", amount: \"{trigger.output[[asset=$in_asset]]}\"}]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}";e.default=a},c8db:function(t,e,n){"use strict";var a=n("9bad"),s=n.n(a);s.a},cb85:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"ErrorCodes",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(e,"ParsingError",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(e,"InternalError",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(e,"ValidationError",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(e,"UndefinedGrammarError",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(e,"AgentAlreadyDeployedError",{enumerable:!0,get:function(){return u.default}});var s=a(n("6b99")),r=a(n("c143")),o=a(n("089d")),i=a(n("e385")),l=a(n("0a5b")),u=a(n("bbb9"))},cd69:function(t,e,n){"use strict";var a=n("383e"),s=n.n(a);s.a},cdb1:function(t,e,n){"use strict";var a=n("e54b"),s=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n("8e6e"),n("ac6a"),n("456d"),n("4917");var r=s(n("bd86")),o=a(n("c2c6")),i=s(n("0644")),l=n("78b8");function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(n,!0).forEach(function(e){(0,r.default)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(n).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}var d={id:"ojson",tokensProvider:{keyword:["messages","bounce_fees","app","data","payload","asset","outputs","address","amount","cases","if","init","state","base","cap","is_private","is_transferrable","auto_destroy","fixed_denominations","issued_by_definer_only","cosigned_by_definer","spender_attested","issue_condition","transfer_condition","attestors","denominations"],words:["autonomous agent","base","true","false","data","payment","data_feed","profile","text","definition","asset_attestors","attestation","state","definition_template","poll","vote","asset"],escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,whites:/[ \t\r\n]+/,tokenizer:{root:[[/[a-z_$][\w$]*/,{cases:{"@keyword":"keyword.ojson","@words":"variable.predefined","@default":""}}],{include:"@whitespace"},[/[{}[\]]/,"@brackets"],[/\d*\.\d+([eE][-+]?\d+)?/,"number.float"],[/0[xX][0-9a-fA-F]+/,"number.hex"],[/\d+/,"number"],[/[;,.:]/,"delimiter"],[/"{/,{token:"keyword",next:"@oscript_double",nextEmbedded:"oscript"}],[/'{/,{token:"keyword",next:"@oscript_single",nextEmbedded:"oscript"}],[/`{/,{token:"keyword",next:"@oscript_backtick",nextEmbedded:"oscript"}],[/"/,{token:"string.quote",bracket:"@open",next:"@string_double"}],[/`/,{token:"string.quote",bracket:"@open",next:"@string_backtick"}],[/'/,{token:"string.quote",bracket:"@open",next:"@string_single"}],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],comment:[[/[^\/*]+/,"comment"],[/\/\*/,"comment","@push"],["\\*/","comment","@pop"],[/[\/*]/,"comment"]],string_double:[[/[^\\"]+/,{cases:{"@words":"variable.predefined","@default":"autocomplete"}}],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",bracket:"@close",next:"@pop"}]],string_single:[[/[^\\']+/,{cases:{"@words":"variable.predefined","@default":"autocomplete"}}],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'/,{token:"string.quote",bracket:"@close",next:"@pop"}]],string_backtick:[[/[^\\`]+/,{cases:{"@words":"variable.predefined","@default":"autocomplete"}}],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/`/,{token:"string.quote",bracket:"@close",next:"@pop"}]],oscript_double:[[/}"/,{token:"keyword",next:"@pop",nextEmbedded:"@pop"}]],oscript_single:[[/}'/,{token:"keyword",next:"@pop",nextEmbedded:"@pop"}]],oscript_backtick:[[/}`/,{token:"keyword",next:"@pop",nextEmbedded:"@pop"}]],whitespace:[[/@whites/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}},conf:{brackets:[["{","}"],["[","]"],["(",")"],['"{','}"'],["`{","}`"],["'{","}'"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"},{open:'"{',close:"}"},{open:"'{",close:"}"},{open:"`{",close:"}"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],comments:{lineComment:"//",blockComment:["/*","*/"]}},suggestions:function(t,e){var n=t.getValueInRange({startLineNumber:e.lineNumber,startColumn:1,endLineNumber:e.lineNumber,endColumn:e.column}),a=function(t){return t.quoted?c({},t,{insertText:f(n,t.label)}):t};return p(t,e)?(0,i.default)(l.oscriptWordsList).map(a):m(t,e)?(0,i.default)(l.ojsonValuesList).map(a):(0,i.default)(l.ojsonKeysList).map(a)},hovers:function(t,e){var n=t.getWordAtPosition(e);if(n){var a;if(p(t,e)){var s=n.word;if("asset"===s){var r=g(t,e.lineNumber,n.endColumn);"["===r&&(s="asset[")}else s=$(t,e.lineNumber,n);a=l.oscriptWordsList.filter(function(t){return t.label===s&&t.documentation})}else a=m(t,e)?l.ojsonValuesList.filter(function(t){return t.label===n.word&&t.documentation}):l.ojsonKeysList.filter(function(t){return t.label===n.word&&t.documentation});return a.length>0?{range:new o.Range(e.lineNumber,n.startColumn,e.lineNumber,n.endColumn),contents:a.map(function(t){return t.documentation})}:null}}};e.default=d;var m=function(t,e){var n=t.getValueInRange({startLineNumber:e.lineNumber,startColumn:1,endLineNumber:e.lineNumber,endColumn:e.column});return n.match(/:\s*(\S+)?$/)},p=function(t,e){for(var n=t.getValueInRange({startLineNumber:1,startColumn:1,endLineNumber:e.lineNumber,endColumn:e.column}),a=n.length-1;a>0;a--){var s=n[a-1]+n[a];if('"{'===s||"`{"===s||"'{"===s)return!0;if('}"'===s||"}`"===s||"}'"===s)return!1}},f=function(t,e){var n;return n=t.match(/'\S+$/)?e:t.match(/"\S+$/)?e:t.match(/`\S+$/)?e:"'"+e+"'",n},b=function(t,e,n,a){var s={startColumn:n,endColumn:n+a,startLineNumber:e,endLineNumber:e};return t.getValueInRange(s)},g=function(t,e,n){return b(t,e,n,1)},h=function(t,e,n){return b(t,e,n,-1)},$=function(t,e,n){var a=n.startColumn,s=n.endColumn,r=n.word;if("."===h(t,e,a)){var o=t.getWordAtPosition({lineNumber:e,column:a-2}).word;return"".concat(o,".").concat(r)}if("."===g(t,e,s)){var i=t.getWordAtPosition({lineNumber:e,column:s+2}).word;return"".concat(r,".").concat(i)}return r}},d207:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n("96cf");var s=a(n("3b8d")),r=n("e7d3"),o=function(){return{namespaced:!0,actions:{validate:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return e.commit,t.next=3,r.BACKEND.post("/aa/validate",{data:n});case 3:return a=t.sent,s=a.data,t.abrupt("return",s);case 6:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}(),deploy:function(){var t=(0,s.default)(regeneratorRuntime.mark(function t(e,n){var a,s;return regeneratorRuntime.wrap(function(t){while(1)switch(t.prev=t.next){case 0:return e.commit,t.next=3,r.BACKEND.post("/aa/deploy",{data:n});case 3:return a=t.sent,s=a.data,t.abrupt("return",s);case 6:case"end":return t.stop()}},t)}));function e(e,n){return t.apply(this,arguments)}return e}()}}};e.default=o},e385:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var s=a(n("d225")),r=a(n("308d")),o=a(n("6bb5")),i=a(n("013f")),l=a(n("4e2b")),u=a(n("f28b")),c=function(t){function e(t){var n;return(0,s.default)(this,e),n=(0,r.default)(this,(0,o.default)(e).call(this,t)),Error.captureStackTrace((0,i.default)(n),n.constructor),n}return(0,l.default)(e,t),e}((0,u.default)(Error));e.default=c},e504:function(t,e,n){"use strict";var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"root-agent-controls",class:{renaming:t.isRenamingActive},on:{mouseleave:t.handleMouseleave}},[n("div",{staticClass:"agent-controls"},[t.isRenamingActive?[n("div",{staticClass:"agent-controls-rename"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.renameInput,expression:"renameInput"}],ref:"renameInputEl",staticClass:"agent-controls-rename-input",attrs:{type:"text"},domProps:{value:t.renameInput},on:{keyup:[function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.handleActionRenameDone(e)},function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"esc",27,e.key,["Esc","Escape"])?null:t.handleActionRenameCancel(e)}],blur:t.handleActionRenameCancel,input:function(e){e.target.composing||(t.renameInput=e.target.value)}}})]),n("div",{staticClass:"agent-controls-action green",attrs:{title:"Done"},on:{mousedown:t.handleActionRenameDone}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/check.png"}})])]:t.isDeletingActive?[n("div",{staticClass:"agent-controls-text"},[t._v("Delete Autonomous Agent?")]),n("div",{staticClass:"agent-controls-action red",attrs:{title:"Cancel"},on:{click:t.handleActionDeleteCancel}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/cross.png"}})]),n("div",{staticClass:"agent-controls-action green",attrs:{title:"Confirm"},on:{click:t.handleActionDeleteConfirm}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/check.png"}})])]:[n("base",{attrs:{href:"/"}}),t.$route.params.id?t._e():n("div",{directives:[{name:"show",rawName:"v-show",value:t.isSelectedAgentUser,expression:"isSelectedAgentUser"}],staticClass:"agent-controls-action blue",attrs:{title:"Share Agent"},on:{click:t.handleActionShare}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/share.png"}})]),n("div",{directives:[{name:"show",rawName:"v-show",value:t.isSelectedAgentUser,expression:"isSelectedAgentUser"}],staticClass:"agent-controls-action",attrs:{title:"Rename Agent"},on:{click:t.handleActionRename}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/edit.png"}})]),n("div",{directives:[{name:"show",rawName:"v-show",value:t.isSelectedAgentUser,expression:"isSelectedAgentUser"}],staticClass:"agent-controls-action red",attrs:{title:"Delete Agent"},on:{click:t.handleActionDelete}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/delete.png"}})]),n("div",{staticClass:"agent-controls-action green",attrs:{title:"New Agent"},on:{click:t.handleActionNew}},[n("img",{staticClass:"agent-controls-action-img",attrs:{src:"static/images/icons/add.png"}})])]],2)])},s=[];n.d(e,"a",function(){return a}),n.d(e,"b",function(){return s})},e772:function(t,e,n){"use strict";n.r(e);var a=n("e504"),s=n("7bbf");for(var r in s)"default"!==r&&function(t){n.d(e,t,function(){return s[t]})}(r);n("fd7a");var o=n("2877"),i=Object(o["a"])(s["default"],a["a"],a["b"],!1,null,"f11a79d2",null);e["default"]=i.exports},e7d3:function(t,e,n){"use strict";var a=n("288e");Object.defineProperty(e,"__esModule",{value:!0}),e.BACKEND=void 0;var s=a(n("bc3a")),r=a(n("9b02")),o=n("cb85"),i={api:{url:"https://oscript.org/api/v1/"},mode:"production",explorer:{url:"https://explorer.obyte.org/"}},l=s.default.create({baseURL:i.api.url,timeout:5e3});e.BACKEND=l,l.interceptors.response.use(function(t){return t},function(t){var e=t.response;if(e){if(e&&400===e.status)switch(e.status){case o.ErrorCodes.VALIDATION_ERROR:throw new o.ValidationError(e.data.error);case o.ErrorCodes.PARSING_ERROR:throw new o.ParsingError(e.data.error)}else if(e&&500===e.status)switch(e.status){case o.ErrorCodes.AGENT_ALREADY_DEPLOYED_ERROR:throw new o.AgentAlreadyDeployedError(e.data.error);case o.ErrorCodes.INTERNAL_ERROR:throw new o.InternalError(e.data.error)}throw new Error((0,r.default)(e,"data.error","Unexpected Error"))}throw new Error("Network Error")})},f06a:function(t,e,n){"use strict";var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"app"}},[n("router-view")],1)},s=[];n.d(e,"a",function(){return a}),n.d(e,"b",function(){return s})},f6fe:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tinit: `{\n\t\t$asset = 'n9y3VomFeWFeZZ2PcSEcmyBb/bI7kzZduBJigNetnkY=';\n\t\t$mm_asset = var['mm_asset'];\n\t}`,\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // define share asset\n\t\t\t\tif: `{ trigger.data.define AND !$mm_asset }`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t// without cap\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['mm_asset'] = response_unit;\n\t\t\t\t\t\t\tresponse['mm_asset'] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // invest in MM\n\t\t\t\tif: `{$mm_asset AND trigger.output[[asset=base]] > 1e5 AND trigger.output[[asset=$asset]] > 0}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$asset_balance = balance[$asset] - trigger.output[[asset=$asset]];\n\t\t\t\t\t$bytes_balance = balance[base] - trigger.output[[asset=base]];\n\t\t\t\t\tif ($asset_balance == 0 OR $bytes_balance == 0){ // initial deposit\n\t\t\t\t\t\t$issue_amount = balance[base];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t$current_ratio = $asset_balance / $bytes_balance;\n\t\t\t\t\t$expected_asset_amount = round($current_ratio * trigger.output[[asset=base]]);\n\t\t\t\t\tif ($expected_asset_amount != trigger.output[[asset=$asset]])\n\t\t\t\t\t\tbounce('wrong ratio of amounts, expected ' || $expected_asset_amount || ' of asset');\n\t\t\t\t\t$investor_share_of_prev_balance = trigger.output[[asset=base]] / $bytes_balance;\n\t\t\t\t\t$issue_amount = round($investor_share_of_prev_balance * var['mm_asset_outstanding']);\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{$mm_asset}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ $issue_amount }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['mm_asset_outstanding'] += $issue_amount;\n\t\t\t\t\t\t}`\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // divest MM shares \n\t\t\t\t// (user is already paying 10000 bytes bounce fee which is a divest fee)\n\t\t\t\t// the price slightly moves due to fees received and paid in bytes\n\t\t\t\tif: `{$mm_asset AND trigger.output[[asset=$mm_asset]]}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$mm_asset_amount = trigger.output[[asset=$mm_asset]];\n\t\t\t\t\t$investor_share = $mm_asset_amount / var['mm_asset_outstanding'];\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{$asset}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ round($investor_share * balance[$asset]) }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ round($investor_share * balance[base]) }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\tvar['mm_asset_outstanding'] -= trigger.output[[asset=$mm_asset]];\n\t\t\t\t\t\t}`\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // exchange bytes to asset\n\t\t\t\tif: `{trigger.output[[asset=base]] > 1e5 AND trigger.output[[asset=$asset]] == 0 AND var['mm_asset_outstanding']}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$asset_balance = balance[$asset] - trigger.output[[asset=$asset]];\n\t\t\t\t\t$bytes_balance = balance[base] - trigger.output[[asset=base]];\n\t\t\t\t\t// other formula can be used for product, e.g. $asset_balance * $bytes_balance ^ 2\n\t\t\t\t\t$p = $asset_balance * $bytes_balance;\n\t\t\t\t\t$new_asset_balance = round($p / balance[base]);\n\t\t\t\t\t$amount = $asset_balance - $new_asset_balance; // we can deduct exchange fees here\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{$asset}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ $amount }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // exchange asset to bytes\n\t\t\t\tif: `{trigger.output[[asset=$asset]] > 0 AND var['mm_asset_outstanding']}`,\n\t\t\t\tinit: `{\n\t\t\t\t\t$asset_balance = balance[$asset] - trigger.output[[asset=$asset]];\n\t\t\t\t\t$bytes_balance = balance[base] - trigger.output[[asset=base]]; // 10Kb fee\n\t\t\t\t\t// other formula can be used for product, e.g. $asset_balance * $bytes_balance ^ 2\n\t\t\t\t\t$p = $asset_balance * $bytes_balance;\n\t\t\t\t\t$new_bytes_balance = round($p / balance[$asset]);\n\t\t\t\t\t$amount = $bytes_balance - $new_bytes_balance; // we can deduct exchange fees here\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ $amount }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a},fd7a:function(t,e,n){"use strict";var a=n("44e9"),s=n.n(a);s.a},fecd:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a="{\n\tmessages: {\n\t\tcases: [\n\t\t\t{ // define USD and GB assets\n\t\t\t\tif: `{\n\t\t\t\t\t$define_usd = trigger.data.define_usd AND !var['usd_asset'];\n\t\t\t\t\t$define_gb = trigger.data.define_gb AND !var['gb_asset'];\n\t\t\t\t\tif ($define_usd AND $define_gb)\n\t\t\t\t\t\tbounce(\"can't define both assets at the same time\");\n\t\t\t\t\t$define_usd OR $define_gb\n\t\t\t\t}`,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'asset',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t// without cap\n\t\t\t\t\t\t\tis_private: false,\n\t\t\t\t\t\t\tis_transferrable: true,\n\t\t\t\t\t\t\tauto_destroy: false,\n\t\t\t\t\t\t\tfixed_denominations: false,\n\t\t\t\t\t\t\tissued_by_definer_only: true,\n\t\t\t\t\t\t\tcosigned_by_definer: false,\n\t\t\t\t\t\t\tspender_attested: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'state',\n\t\t\t\t\t\tstate: `{\n\t\t\t\t\t\t\t$asset = $define_usd ? 'usd_asset' : 'gb_asset';\n\t\t\t\t\t\t\tvar[$asset] = response_unit;\n\t\t\t\t\t\t\tresponse[$asset] = response_unit;\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // issue USD and GB assets in exchange for bytes, it's ok to issue them even after expiry or blackswan\n\t\t\t\tif: \"{trigger.output[[asset=base]] >= 1e5 AND var['usd_asset'] AND var['gb_asset']}\",\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{var['usd_asset']}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ trigger.output[[asset=base]] }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: 'payment',\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tasset: \"{var['gb_asset']}\",\n\t\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ trigger.output[[asset=base]] }\"}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ // record blackswan event\n\t\t\t\tif: `{ trigger.data.blackswan AND !var['blackswan'] AND data_feed[[oracles='X55IWSNMHNDUIYKICDW3EOYAWHRUKANP', feed_name='GBYTE_USD_MA']] < 25 AND timestamp < 1556668800 }`,\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'state',\n\t\t\t\t\tstate: `{\n\t\t\t\t\t\tvar['blackswan'] = 1;\n\t\t\t\t\t\tresponse['blackswan'] = 1;\n\t\t\t\t\t}`\n\t\t\t\t}]\n\t\t\t},\n\t\t\t// 1 GB is now 50 USD, 1 byte is 50e-9 = 5e-8 USD\n\t\t\t// 1 usd asset is always 2.5e-8 USD, 1 gb asset is 1 byte minus 2.5e-8 USD\n\t\t\t{ // pay bytes in exchange for the assets\n\t\t\t\tif: `{\n\t\t\t\t\tif (trigger.output[[asset!=base]].asset == 'none')\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t$gb_asset_amount = trigger.output[[asset=var['gb_asset']]];\n\t\t\t\t\t$usd_asset_amount = trigger.output[[asset=var['usd_asset']]];\n\t\t\t\t\tif ($gb_asset_amount < 1e4 AND $usd_asset_amount < 1e4)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif ($gb_asset_amount == $usd_asset_amount){ // helps in case the exchange rate is never posted\n\t\t\t\t\t\t$bytes = $gb_asset_amount;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (var['blackswan'])\n\t\t\t\t\t\t$bytes = $usd_asset_amount;\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (timestamp < 1556668800)\n\t\t\t\t\t\t\tbounce('wait for maturity date');\n\t\t\t\t\t\t// data_feed will abort if the exchange rate not posted yet\n\t\t\t\t\t\t$exchange_rate = data_feed[[oracles='X55IWSNMHNDUIYKICDW3EOYAWHRUKANP', feed_name='GBYTE_USD_MA_2019_04_30']];\n\t\t\t\t\t\t$bytes_per_usd_asset = min(50/$exchange_rate/2, 1);\n\t\t\t\t\t\t$bytes_per_gb_asset = 1 - $bytes_per_usd_asset;\n\t\t\t\t\t\t$bytes = round($bytes_per_usd_asset * $usd_asset_amount + $bytes_per_gb_asset * $gb_asset_amount);\n\t\t\t\t\t}\n\t\t\t\t\ttrue\n\t\t\t\t}`,\n\t\t\t\tmessages: [{\n\t\t\t\t\tapp: 'payment',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tasset: \"base\",\n\t\t\t\t\t\toutputs: [\n\t\t\t\t\t\t\t{address: \"{trigger.address}\", amount: \"{ $bytes }\"}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t]\n\t}\n}";e.default=a}});
//# sourceMappingURL=app.08cc7627.js.map